{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  console.log(username);\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    username: \"\",\n    email: email,\n    password: password,\n    confirmPassword: confirmPassword\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"\\u540D\\u7A31\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: e => setUsername(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"username\",\n    onChange: e => setUsername(e.currentTarget.value),\n    value: username,\n    className: \"form-control\" + (errors.username && touched.username ? \" is-invalid\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"username\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u4FE1\\u7BB1\",\n    name: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u78BA\\u8A8D\\u5BC6\\u78BC\",\n    name: \"confirmPassword\",\n    errors: errors.confirmPassword,\n    touched: touched.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"\\u78BA\\u8A8D\\u9001\\u51FA\")))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","CustomField","Formik","Field","ErrorMessage","Form","logo","Yup","RegisterForm","email","setEmail","password","setPassword","username","setUsername","confirmPassword","setConfirmPassword","console","log","validationSchema","object","shape","string","required","min","oneOf","ref","initialValues","errors","touched","e","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,QAA4C,QAA5C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMM,gBAAgB,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AAC1CR,IAAAA,QAAQ,EAAEN,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADgC;AAE1Cd,IAAAA,KAAK,EAAEF,GAAG,CAACe,MAAJ,GAAab,KAAb,CAAmB,kBAAnB,EAAuCc,QAAvC,CAAgD,mBAAhD,CAFmC;AAG1CZ,IAAAA,QAAQ,EAAEJ,GAAG,CAACe,MAAJ,GACPE,GADO,CACH,CADG,EACA,wCADA,EAEPD,QAFO,CAEE,sBAFF,CAHgC;AAM1CR,IAAAA,eAAe,EAAER,GAAG,CAACe,MAAJ,GACdG,KADc,CACR,CAAClB,GAAG,CAACmB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADQ,EACqB,sBADrB,EAEdH,QAFc,CAEL,8BAFK;AANyB,GAAnB,CAAzB;AAWA,QAAMI,aAAa,GAAG;AACpBd,IAAAA,QAAQ,EAAE,EADU;AAEpBJ,IAAAA,KAAK,EAAEA,KAFa;AAGpBE,IAAAA,QAAQ,EAAEA,QAHU;AAIpBI,IAAAA,eAAe,EAAEA;AAJG,GAAtB;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEY,aAAvB;AAAsC,IAAA,gBAAgB,EAAER,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAGF,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAF9B;AAGE,IAAA,KAAK,EAAEnB,QAHT;AAIE,IAAA,SAAS,EACP,kBACCe,MAAM,CAACf,QAAP,IAAmBgB,OAAO,CAAChB,QAA3B,GAAsC,aAAtC,GAAsD,EADvD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAeE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,eAuBE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,MAAM,EAAEe,MAAM,CAACnB,KAHjB;AAIE,IAAA,OAAO,EAAEoB,OAAO,CAACpB,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA6BE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,MAAM,EAAEmB,MAAM,CAACjB,QAHjB;AAIE,IAAA,OAAO,EAAEkB,OAAO,CAAClB,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,eAmCE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,0BADR;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,MAAM,EAAEiB,MAAM,CAACb,eAHjB;AAIE,IAAA,OAAO,EAAEc,OAAO,CAACd,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,eA0CE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CA1CF,CAFJ,CAFF,CADF;AAyDD,CAlFD;;AAoFA,eAAeP,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\n\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  console.log(username);\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    username: \"\",\n    email: email,\n    password: password,\n    confirmPassword: confirmPassword,\n  };\n\n  return (\n    <div id=\"form\">\n      <h1 id=\"formTitle\">會員註冊</h1>\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\n        {({ errors, touched }) => (\n          <Form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"username\">名稱</label>\n              <Form.Control\n                onChange={(e) => setUsername(e.currentTarget.value)}\n              />\n              <Field\n                name=\"username\"\n                onChange={(e) => setUsername(e.currentTarget.value)}\n                value={username}\n                className={\n                  \"form-control\" +\n                  (errors.username && touched.username ? \" is-invalid\" : \"\")\n                }\n              />\n\n              <ErrorMessage\n                name=\"username\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n\n            <CustomField\n              label=\"信箱\"\n              name=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n            />\n            <CustomField\n              label=\"確認密碼\"\n              name=\"confirmPassword\"\n              errors={errors.confirmPassword}\n              touched={touched.confirmPassword}\n            />\n\n            <div className=\"form-group mt-2\">\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                確認送出\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}