{"ast":null,"code":"var _inherits = require(\"/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\r\n * Created by ying.wu on 2017/6/12.\r\n */\nvar ECpayError = require('./error.js');\n\nvar fs = require('fs');\n\nvar et = require('elementtree');\n\nvar PaymentVerifyBase = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function PaymentVerifyBase() {\n    _classCallCheck(this, PaymentVerifyBase);\n\n    this.param_xml_file = fs.readFileSync(__dirname + '/../../lib/ecpay_payment/ECpayPayment.xml').toString();\n    this.param_xml = et.parse(this.param_xml_file);\n  }\n\n  _createClass(PaymentVerifyBase, [{\n    key: \"get_svc_url\",\n    value: function get_svc_url(apiname, mode) {\n      var url = this.param_xml.findtext(\"./\".concat(apiname, \"/ServiceAddress/url[@type=\\\"\").concat(mode, \"\\\"]\"));\n      return url;\n    }\n  }, {\n    key: \"get_special_encode_param\",\n    value: function get_special_encode_param(apiname) {\n      var ret = [];\n      var node = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@urlencode=\\\"1\\\"]\")); // console.log(node);\n\n      node.forEach(function (elem) {\n        // console.log(elem.attrib.name);\n        ret.push(elem.attrib.name);\n      });\n      return ret;\n    }\n  }, {\n    key: \"get_basic_params\",\n    value: function get_basic_params(apiname) {\n      var basic_param = [];\n      this.param_xml.findall(\"./\".concat(apiname, \"/Parameters/param[@require=\\\"1\\\"]\")).forEach(function (elem) {\n        // console.log(elem.attrib.name);\n        basic_param.push(elem.attrib.name);\n      });\n      return basic_param;\n    }\n  }, {\n    key: \"get_cond_param\",\n    value: function get_cond_param(apiname) {\n      var aio_sw_param = [];\n      var conditional_param = {};\n      this.param_xml.findall(\"./\".concat(apiname, \"/Config/switchparam/n\")).forEach(function (elem) {\n        // console.log(elem.text);\n        aio_sw_param.push(elem.text);\n      });\n      var param_xml = this.param_xml;\n      aio_sw_param.forEach(function (pname) {\n        var opt_param = {};\n        var node = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(pname, \"\\\"]/condparam\"));\n        node.forEach(function (elem) {\n          var opt = elem.attrib.owner;\n          var params = [];\n          param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(pname, \"\\\"]//condparam[@owner=\\\"\").concat(opt, \"\\\"]/param[@require=\\\"1\\\"]\")).forEach(function (pa) {\n            params.push(pa.attrib.name);\n          });\n          opt_param[opt] = params;\n        });\n        conditional_param[pname] = opt_param;\n      });\n      return conditional_param;\n    }\n  }, {\n    key: \"get_param_type\",\n    value: function get_param_type(apiname) {\n      var param_type = {};\n      this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param\")).forEach(function (elem) {\n        param_type[elem.attrib.name] = elem.attrib.type;\n      });\n      return param_type;\n    }\n  }, {\n    key: \"get_opt_param_pattern\",\n    value: function get_opt_param_pattern(apiname) {\n      var pattern = {};\n      var temp_arr = [];\n      var param_xml = this.param_xml;\n      var node = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@type=\\\"Opt\\\"]\"));\n      node.forEach(function (param_elem) {\n        temp_arr.push(param_elem.attrib.name);\n      }); // console.log(temp_arr);\n\n      temp_arr.forEach(function (opt_params) {\n        // console.log(opt_params);\n        var opt_elems = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(opt_params, \"\\\"]//option\")); // console.log(opt_elems);\n\n        var opt = [];\n        opt_elems.forEach(function (oe) {\n          opt.push(oe.text);\n        }); // console.log(opt);\n\n        pattern[opt_params] = opt;\n      });\n\n      if (apiname === 'AioCheckOut') {\n        pattern['ChoosePayment'].splice(3, 13);\n      } // console.log(pattern);\n\n\n      return pattern;\n    }\n  }, {\n    key: \"get_int_param_pattern\",\n    value: function get_int_param_pattern(apiname) {\n      var pattern = {};\n      var temp_arr = [];\n      var param_xml = this.param_xml;\n      var node = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@type=\\\"Int\\\"]\"));\n      node.forEach(function (param_elem) {\n        temp_arr.push(param_elem.attrib.name);\n      }); // console.log(temp_arr);\n\n      temp_arr.forEach(function (opt_params) {\n        // console.log(opt_params);\n        var mode = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(opt_params, \"\\\"]//mode\"));\n        var mx = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(opt_params, \"\\\"]//maximum\"));\n        var mn = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(opt_params, \"\\\"]//minimal\")); // console.log(mode);\n\n        var arr = [];\n        mode.forEach(function (md) {\n          arr.push(md.text);\n        });\n        mx.forEach(function (mx) {\n          arr.push(mx.text);\n        });\n        mn.forEach(function (mn) {\n          arr.push(mn.text);\n        }); // console.log(arr);\n\n        pattern[opt_params] = arr;\n      });\n\n      if (apiname === 'AioCheckOut') {\n        pattern['StoreExpireDate'].splice(1, 2);\n        pattern['StoreExpireDate'].splice(2, 1);\n      } // console.log(pattern);\n\n\n      return pattern;\n    }\n  }, {\n    key: \"get_str_param_pattern\",\n    value: function get_str_param_pattern(apiname) {\n      var pattern = {};\n      var temp_arr = [];\n      var param_xml = this.param_xml;\n      var node = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@type=\\\"String\\\"]\"));\n      node.forEach(function (param_elem) {\n        temp_arr.push(param_elem.attrib.name);\n      }); // console.log(temp_arr);\n\n      temp_arr.forEach(function (opt_params) {\n        // console.log(opt_params);\n        var pat_elems = param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(opt_params, \"\\\"]//pattern\"));\n        var arr = [];\n        pat_elems.forEach(function (pa) {\n          arr.push(pa.text);\n        }); // console.log(arr);\n\n        pattern[opt_params] = arr.toString();\n      });\n\n      if (apiname === 'AioCheckOut') {\n        pattern['InvoiceMark'] = '';\n        pattern['PaymentInfoURL'] = pattern['PaymentInfoURL'].slice(11, 21);\n        pattern['ClientRedirectURL'] = pattern['ClientRedirectURL'].slice(11, 21);\n        pattern['Desc_1'] = pattern['Desc_1'].slice(10, 20);\n        pattern['Desc_2'] = pattern['Desc_2'].slice(10, 20);\n        pattern['Desc_3'] = pattern['Desc_3'].slice(10, 20);\n        pattern['Desc_4'] = pattern['Desc_4'].slice(10, 20);\n      } // console.log(pattern);\n\n\n      return pattern;\n    }\n  }, {\n    key: \"get_depopt_param_pattern\",\n    value: function get_depopt_param_pattern(apiname) {\n      var pattern = {};\n      var param_xml = this.param_xml;\n      var p_name, parent_name;\n      var k, get_opts;\n      var k_opts = [];\n      var sub_opts = {};\n      var parent_n_opts = {};\n      var node = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@type=\\\"DepOpt\\\"]\"));\n      node.forEach(function (param_elem) {\n        p_name = param_elem.attrib.name;\n        parent_name = param_elem.attrib.main;\n      });\n      k = this.param_xml.findall(\"./\".concat(apiname, \"/Parameters//param[@name=\\\"\").concat(p_name, \"\\\"]//mainoption\"));\n      k.forEach(function (elem) {\n        k_opts.push(elem.attrib.name);\n      });\n      k_opts.forEach(function (elem) {\n        get_opts = param_xml.findall(\"./\".concat(apiname, \"/Parameters//mainoption[@name=\\\"\").concat(elem, \"\\\"]//option\"));\n        var opt = [];\n        get_opts.forEach(function (c) {\n          opt.push(c.text);\n          sub_opts[elem] = opt;\n        });\n      }); // console.log(sub_opts);\n\n      parent_n_opts[parent_name] = sub_opts; // console.log(parent_n_opts);\n\n      pattern[p_name] = parent_n_opts; // console.log(pattern['ChooseSubPayment']['ChoosePayment']['BARCODE']);\n\n      return pattern;\n    }\n  }, {\n    key: \"get_all_pattern\",\n    value: function get_all_pattern(apiname) {\n      var res = {};\n      res['Type_idx'] = this.get_param_type(apiname);\n      res['Int'] = this.get_int_param_pattern(apiname);\n      res['String'] = this.get_str_param_pattern(apiname);\n      res['Opt'] = this.get_opt_param_pattern(apiname);\n      res['DepOpt'] = this.get_depopt_param_pattern(apiname);\n      return res;\n    }\n  }, {\n    key: \"verify_param_by_pattern\",\n    value: function verify_param_by_pattern(params, pattern) {\n      // console.log(params);\n      // console.log(pattern);\n      var type_index = pattern['Type_idx']; // console.log(type_index);\n\n      Object.keys(params).forEach(function (p_name) {\n        // console.log(p_name);\n        var p_type = type_index[p_name]; // console.log(p_type);\n\n        var patt_container = pattern[p_type]; // console.log(patt_container);\n\n        switch (p_type) {\n          case 'String':\n            var regex_patt = patt_container[p_name];\n            var mat = params[p_name].match(new RegExp(regex_patt));\n\n            if (mat === null) {\n              throw new ECpayError.ECpayInvalidParam(\"Wrong format of param \".concat(p_name, \" or length exceeded.\"));\n            }\n\n            break;\n\n          case 'Opt':\n            var aval_opt = patt_container[p_name];\n            var mat_opt = aval_opt.includes(params[p_name]);\n\n            if (mat_opt === false) {\n              throw new ECpayError.ECpayInvalidParam(\"Unexpected option of param \".concat(p_name, \" (\").concat(params[p_name], \"). Available option: (\").concat(aval_opt, \").\"));\n            }\n\n            break;\n\n          case 'Int':\n            var criteria = patt_container[p_name]; // console.log('criteria: '+ criteria);\n\n            var mode = criteria[0];\n            var max = parseInt(criteria[1]);\n            var min = parseInt(criteria[2]);\n            var val = parseInt(params[p_name]); // console.log('mode: '+ mode);\n            // console.log('max: '+  max);\n            // console.log('min: '+  min);\n            // console.log('val: '+  val);\n\n            switch (mode) {\n              case 'BETWEEN':\n                if (val < min || val > max) {\n                  throw new ECpayError.ECpayInvalidParam(\"Value of \".concat(p_name, \" should be between \").concat(min, \" and \").concat(max, \".\"));\n                }\n\n                break;\n\n              case 'GE':\n                if (val < min) {\n                  throw new ECpayError.ECpayInvalidParam(\"Value of \".concat(p_name, \" should be greater than or equal to \").concat(min, \".\"));\n                }\n\n                break;\n\n              case 'LE':\n                if (val > max) {\n                  throw new ECpayError.ECpayInvalidParam(\"Value of \".concat(p_name, \" should be less than or equal to \").concat(max, \".\"));\n                }\n\n                break;\n\n              case 'EXCLUDE':\n                if (val >= max && val <= max) {\n                  throw new ECpayError.ECpayInvalidParam(\"Value of \".concat(p_name, \" can NOT be between \").concat(min, \" and \").concat(max, \"..\"));\n                }\n\n                break;\n\n              default:\n                throw new ECpayError.ECpayInvalidParam(\"Unexpected integer verification mode for parameter \".concat(p_name, \": \").concat(mode, \".\"));\n            }\n\n            break;\n\n          case 'DepOpt':\n            var dep_opt = patt_container[p_name];\n            var parent_param = Object.keys(dep_opt)[0];\n            var all_dep_opt = dep_opt[parent_param];\n            var parent_val = params[parent_param];\n            var aval_dopt = all_dep_opt[parent_val];\n\n            if (aval_dopt === null && pattern['Opt'][parent_param].includes(parent_val) === false) {\n              throw new ECpayError.ECpayInvalidParam(\"Cannot find available option of [\".concat(p_name, \"] by related param [\").concat(parent_param, \"](Value: \").concat(parent_val, \".\"));\n            } else if (aval_dopt.constructor === Array) {\n              if (!aval_dopt.includes(params[p_name])) {\n                throw new ECpayError.ECpayInvalidParam(\"Unexpected option of param \".concat(p_name, \" (\").concat(params[p_name], \"). Available option: (\").concat(aval_dopt, \").\"));\n              }\n            }\n\n            break;\n\n          default:\n            throw new Error(\"Unexpected type (\".concat(p_type, \") for parameter \").concat(p_name, \".\"));\n        }\n      });\n    }\n  }]);\n\n  return PaymentVerifyBase;\n}();\n\nvar AioCheckOutParamVerify = /*#__PURE__*/function (_PaymentVerifyBase) {\n  \"use strict\";\n\n  _inherits(AioCheckOutParamVerify, _PaymentVerifyBase);\n\n  var _super = _createSuper(AioCheckOutParamVerify);\n\n  function AioCheckOutParamVerify() {\n    var _this;\n\n    _classCallCheck(this, AioCheckOutParamVerify);\n\n    _this = _super.call(this);\n    _this.aio_basic_param = _this.get_basic_params('AioCheckOut');\n    _this.aio_conditional_param = _this.get_cond_param('AioCheckOut');\n    _this.all_param_pattern = _this.get_all_pattern('AioCheckOut');\n    return _this;\n  }\n\n  _createClass(AioCheckOutParamVerify, [{\n    key: \"get_serialized_data\",\n    value: function get_serialized_data() {\n      console.log(this.aio_basic_param);\n      console.log('-----');\n      console.log(this.aio_conditional_param);\n      var new_di = this.aio_conditional_param;\n      delete new_di['InvoiceMark'];\n      console.log(this.aio_conditional_param);\n      console.log('-----');\n      console.log(new_di);\n    }\n  }, {\n    key: \"verify_aio_payment_param\",\n    value: function verify_aio_payment_param(params) {\n      if (params.constructor === Object) {\n        // Force specify => DeviceSource, IgnorePayment, PlatformID, EncryptType\n        var fix_params = {\n          DeviceSource: '',\n          // PlatformID: '',\n          EncryptType: '1',\n          PaymentType: 'aio'\n        };\n        Object.assign(params, fix_params); // Verify Basic param requirement\n        // if (params === {}){\n        //     throw new ECpayError.ECpayInvalidParam(`Parameter object is empty.`);\n        // }\n\n        var basic_param = this.aio_basic_param.sort();\n        var input_param = Object.keys(params).sort();\n        basic_param.forEach(function (pname) {\n          if (input_param.indexOf(pname, 0) === -1) {\n            throw new ECpayError.ECpayInvalidParam(\"Lack required param \".concat(pname));\n          }\n        }); // Verify Extend param requirement\n\n        var ext_param = this.aio_conditional_param;\n        delete ext_param['InvoiceMark'];\n        Object.keys(ext_param).forEach(function (pa) {\n          var val = params[pa];\n          var related_required_param = ext_param[pa][val];\n\n          if (related_required_param !== undefined && related_required_param !== []) {\n            related_required_param.forEach(function (e) {\n              if (!Object.keys(params).includes(e)) {\n                throw new ECpayError.ECpayInvalidParam(\"Lack required parameter [\".concat(e, \"] when [\").concat(pa, \"] is set to [\").concat(val, \"].\"));\n              }\n            });\n          }\n        }); // Verify Value pattern of each param\n\n        this.verify_param_by_pattern(params, this.all_param_pattern);\n      } else {\n        throw new TypeError(\"Received argument is not a Object.\");\n      }\n    }\n  }, {\n    key: \"verify_aio_inv_param\",\n    value: function verify_aio_inv_param(params) {\n      if (params.constructor === Object) {\n        // 發票所有參數預設要全帶\n        Object.keys(params).forEach(function (keys) {\n          if (params[keys] === null) {\n            throw new ECpayError.ECpayInvalidParam(\"Parameter value cannot be null.\");\n          }\n        }); // 1. 比對欄位是否缺乏\n\n        var inv_param = this.aio_conditional_param['InvoiceMark']['Y'];\n        var input_param = Object.keys(params);\n        inv_param.forEach(function (pname) {\n          if (input_param.indexOf(pname, 0) === -1) {\n            throw new ECpayError.ECpayInvalidParam(\"Lack required invoice param \".concat(pname));\n          }\n        });\n        input_param.forEach(function (pname) {\n          if (inv_param.indexOf(pname, 0) === -1) {\n            throw new ECpayError.ECpayInvalidParam(\"Unexpected parameter in Invoice parameters \".concat(pname));\n          }\n        }); // let inv_param_names = this.aio_conditional_param['InvoiceMark']['Y'];\n        // let param_diff = inv_param_names - Object.keys(params);\n        // if (param_diff !== []){\n        //     throw new ECpayError.ECpayInvalidParam(`Lack required invoice param ${param_diff}`);\n        // }\n        // let unexp_param = Object.keys(params) - inv_param_names;\n        // if (unexp_param !== []){\n        //     throw new ECpayError.ECpayInvalidParam(`Unexpected parameter in Invoice parameters ${unexp_param}`);\n        // }\n        // 2. 比對特殊欄位值相依需求\n        // a [CarruerType]為1 => CustomerID 不能為空\n\n        if (params['CarruerType'] === '1') {\n          if (params['CustomerID'] === '') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CustomerID] can not be empty when [CarruryType] is 1.\");\n          }\n        } // [CustomerID]不為空 => CarruerType 不能為空\n        else if (params['CarruerType'] === '') {\n            if (params['CustomerID'] !== '') {\n              throw new ECpayError.ECpayInvoiceRuleViolate(\"[CarruerType] can not be empty when [CustomerID] is not empty.\");\n            }\n          } // b 列印註記[Print]為1 => CustomerName, CustomerAddr 不能為空\n\n\n        if (params['Print'] === '1') {\n          if (params['CustomerName'] === '' && params['CustomerAddr'] === '') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CustomerName] and [CustomerAddr] can not be empty when [Print] is 1.\");\n          }\n\n          if (params['CustomerID'] !== '') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[Print] can not be '1' when [CustomerID] is not empty.\");\n          }\n        } // c CustomerPhone和CustomerEmail至少一個要有值\n\n\n        if (params['CustomerPhone'] === '' && params['CustomerEmail'] === '') {\n          throw new ECpayError.ECpayInvoiceRuleViolate(\"[CustomerPhone] and [CustomerEmail] can not both be empty.\");\n        } // d 別[TaxType]為2 => ClearanceMark = 1 or 2 and InvoiceItemTaxType must include '2'\n\n\n        if (params['TaxType'] === '2') {\n          if (params['ClearanceMark'] !== '1' && params['ClearanceMark'] !== '2') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[ClearanceMark] has to be 1 or 2 when [TaxType] is 2.\");\n          }\n\n          if (!params['InvoiceItemTaxType'].includes('2')) {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[InvoiceItemTaxType] must contain at lease one '2' when [TaxType] is 2.\");\n          }\n        } // e 統一編號[CustomerIdentifier]有值時 => CarruerType != 1 or 2, Donation = 0, Print = 1\n\n\n        if (params['CustomerIdentifier'] !== '') {\n          if (params['CarruerType'] === '1' || params['CarruerType'] === '2') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CarruerType] Cannot be 1 or 2 when [CustomerIdentifier] is given.\");\n          }\n        } // [CarruerType]為'' or 1 時 : CarruerNum = '', [CarruerType]為2, CarruerNum = 固定長度為16且格式為2碼大小寫字母加上14碼數字。\n        // [CarruerType]為3, 固定長度為8且格式為1碼斜線「/」加上7碼數字及大小寫字母組成\n\n\n        if (params['CarruerType'] === '' || params['CarruerType'] === '1') {\n          if (params['CarruerNum'] !== '') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CarruerNum] must be empty when [CarruerType] is empty or 1.\");\n          }\n        } else if (params['CarruerType'] === '2') {\n          if (params['CarruerNum'].match(new RegExp(/[A-Za-z]{2}[0-9]{14}/)) === null) {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CarruerNum] must be 2 alphabets and 14 numbers when [CarruerType] is 2.\");\n          }\n        } else if (params['CarruerType'] === '3') {\n          if (params['CarruerNum'].match(new RegExp(/^\\/[A-Za-z0-9\\s+-]{7}$/)) === null) {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[CarruerNum] must start with '/' followed by 7 alphabet and number characters when [CarruerType] is 3.\");\n          }\n        } else {\n          throw new ECpayError.ECpayInvoiceRuleViolate(\"Unexpected value in [CarruerType].\");\n        } // [CarruerType]有值時，Print必須有為0\n\n\n        if (params['CarruerType'] !== '' && params['Print'] !== '0') {\n          throw new ECpayError.ECpayInvoiceRuleViolate(\"[Print] must be 0 when [CarruerType] has value.\");\n        } // Donation = 1 => LoveCode不能為空, Print = 0\n\n\n        if (params['Donation'] === '1') {\n          if (params['LoveCode'] === '') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[LoveCode] cannot be empty when [Donation] is 1.\");\n          }\n\n          if (params['Print'] !== '0') {\n            throw new ECpayError.ECpayInvoiceRuleViolate(\"[Print] must be 0 when [Donation] is 1.\");\n          }\n        } // 3. 比對商品名稱，數量，單位，價格，tax項目數量是否一致\n\n\n        var item_params = ['InvoiceItemCount', 'InvoiceItemWord', 'InvoiceItemPrice', 'InvoiceItemTaxType']; // 商品名稱含有管線 => 認為是多樣商品 *InvoiceItemName, *InvoiceItemCount, *InvoiceItemWord, *InvoiceItemPrice, *InvoiceItemTaxType逐一用管線分割，計算數量後與第一個比對\n\n        if (params['InvoiceItemName'] === '') {\n          throw new ECpayError.ECpayInvoiceRuleViolate(\"[InvoiceItemName] is empty.\");\n        } else {\n          if (params['InvoiceItemName'].includes('|')) {\n            var item_cnt = params['InvoiceItemName'].split('|').length;\n            item_params.forEach(function (param_name) {\n              // Check if there's empty value.\n              if (params[param_name].match(new RegExp(/(\\|\\||^\\||\\|$)/)) !== null) {\n                throw new ECpayError.ECpayInvoiceRuleViolate(\"[\".concat(param_name, \"] contains empty value.\"));\n              }\n\n              var p_cnt = params[param_name].split('|').length;\n\n              if (item_cnt !== p_cnt) {\n                throw new ECpayError.ECpayInvoiceRuleViolate(\"Count of item info [\".concat(param_name, \"] (\").concat(p_cnt, \") not match count from [InvoiceItemName] (\").concat(item_cnt, \").\"));\n              }\n            }); // 課稅類別[TaxType] = 9時 => InvoiceItemTaxType 能含有1,2,3(and at least contains one 1 and other)\n\n            var item_tax = params['InvoiceItemTaxType'].split('|');\n            var aval_tax_type = ['1', '2', '3'];\n            var vio_tax_t = item_tax - aval_tax_type;\n\n            if (vio_tax_t === []) {\n              throw new ECpayError.ECpayInvoiceRuleViolate(\"Illegal [InvoiceItemTaxType]: \".concat(vio_tax_t));\n            }\n\n            if (params['TaxType'] === '9') {\n              if (!item_tax.includes('1')) {\n                throw new ECpayError.ECpayInvoiceRuleViolate(\"[InvoiceItemTaxType] must contain at lease one '1'.\");\n              }\n\n              if (item_tax.includes('2') && item_tax.includes('3')) {\n                throw new ECpayError.ECpayInvoiceRuleViolate(\"[InvoiceItemTaxType] cannot contain 2 and 3 at the same time.\");\n              }\n            }\n          } else {\n            // 沒有管線 => 逐一檢查後4項有無管線\n            item_params.forEach(function (param_name) {\n              if (params[param_name].includes('|')) {\n                throw new ECpayError.ECpayInvoiceRuleViolate(\"Item info [\".concat(param_name, \"] contain pipeline delimiter but there's only one item in param [InvoiceItemName].\"));\n              }\n            });\n          }\n        } // 4. 比對所有欄位Pattern\n\n\n        this.verify_param_by_pattern(params, this.all_param_pattern);\n      } else {\n        throw TypeError(\"Received argument is not a object.\");\n      }\n    }\n  }]);\n\n  return AioCheckOutParamVerify;\n}(PaymentVerifyBase);\n\nvar QueryParamVerify = /*#__PURE__*/function (_PaymentVerifyBase2) {\n  \"use strict\";\n\n  _inherits(QueryParamVerify, _PaymentVerifyBase2);\n\n  var _super2 = _createSuper(QueryParamVerify);\n\n  function QueryParamVerify(apiname) {\n    var _this2;\n\n    _classCallCheck(this, QueryParamVerify);\n\n    _this2 = _super2.call(this);\n    _this2.aio_basic_param = _this2.get_basic_params(apiname);\n    _this2.aio_conditional_param = _this2.get_cond_param(apiname);\n    _this2.all_param_pattern = _this2.get_all_pattern(apiname);\n    return _this2;\n  }\n\n  _createClass(QueryParamVerify, [{\n    key: \"verify_query_param\",\n    value: function verify_query_param(params) {\n      if (params.constructor === Object) {\n        var basic_param = this.aio_basic_param.sort();\n        var input_param = Object.keys(params).sort();\n        basic_param.forEach(function (pname) {\n          if (input_param.indexOf(pname, 0) === -1) {\n            throw new ECpayError.ECpayInvalidParam(\"Lack required param \".concat(pname));\n          }\n        }); // Verify Value pattern of each param\n\n        this.verify_param_by_pattern(params, this.all_param_pattern);\n      } else {\n        throw new TypeError(\"Received argument is not a object\");\n      }\n    }\n  }]);\n\n  return QueryParamVerify;\n}(PaymentVerifyBase);\n\nvar ActParamVerify = /*#__PURE__*/function (_PaymentVerifyBase3) {\n  \"use strict\";\n\n  _inherits(ActParamVerify, _PaymentVerifyBase3);\n\n  var _super3 = _createSuper(ActParamVerify);\n\n  function ActParamVerify(apiname) {\n    var _this3;\n\n    _classCallCheck(this, ActParamVerify);\n\n    _this3 = _super3.call(this);\n    _this3.aio_basic_param = _this3.get_basic_params(apiname);\n    _this3.aio_conditional_param = _this3.get_cond_param(apiname);\n    _this3.all_param_pattern = _this3.get_all_pattern(apiname);\n    return _this3;\n  }\n\n  _createClass(ActParamVerify, [{\n    key: \"verify_act_param\",\n    value: function verify_act_param(params) {\n      if (params.constructor === Object) {\n        var basic_param = this.aio_basic_param.sort();\n        var input_param = Object.keys(params).sort();\n        basic_param.forEach(function (pname) {\n          if (input_param.indexOf(pname, 0) === -1) {\n            throw new ECpayError.ECpayInvalidParam(\"Lack required param \".concat(pname));\n          }\n        }); // Verify Value pattern of each param\n\n        this.verify_param_by_pattern(params, this.all_param_pattern);\n      } else {\n        throw new TypeError(\"Received argument is not a object\");\n      }\n    }\n  }]);\n\n  return ActParamVerify;\n}(PaymentVerifyBase);\n\nmodule.exports = {\n  PaymentVerifyBase: PaymentVerifyBase,\n  AioCheckOutParamVerify: AioCheckOutParamVerify,\n  QueryParamVerify: QueryParamVerify,\n  ActParamVerify: ActParamVerify\n};","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/ecpay-payment/lib/ecpay_payment/verification.js"],"names":["ECpayError","require","fs","et","PaymentVerifyBase","param_xml_file","readFileSync","__dirname","toString","param_xml","parse","apiname","mode","url","findtext","ret","node","findall","forEach","elem","push","attrib","name","basic_param","aio_sw_param","conditional_param","text","pname","opt_param","opt","owner","params","pa","param_type","type","pattern","temp_arr","param_elem","opt_params","opt_elems","oe","splice","mx","mn","arr","md","pat_elems","slice","p_name","parent_name","k","get_opts","k_opts","sub_opts","parent_n_opts","main","c","res","get_param_type","get_int_param_pattern","get_str_param_pattern","get_opt_param_pattern","get_depopt_param_pattern","type_index","Object","keys","p_type","patt_container","regex_patt","mat","match","RegExp","ECpayInvalidParam","aval_opt","mat_opt","includes","criteria","max","parseInt","min","val","dep_opt","parent_param","all_dep_opt","parent_val","aval_dopt","constructor","Array","Error","AioCheckOutParamVerify","aio_basic_param","get_basic_params","aio_conditional_param","get_cond_param","all_param_pattern","get_all_pattern","console","log","new_di","fix_params","DeviceSource","EncryptType","PaymentType","assign","sort","input_param","indexOf","ext_param","related_required_param","undefined","e","verify_param_by_pattern","TypeError","inv_param","ECpayInvoiceRuleViolate","item_params","item_cnt","split","length","param_name","p_cnt","item_tax","aval_tax_type","vio_tax_t","QueryParamVerify","ActParamVerify","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Created by ying.wu on 2017/6/12.\r\n */\r\nconst ECpayError = require('./error.js');\r\nconst fs = require('fs');\r\nconst et = require('elementtree');\r\n\r\nclass PaymentVerifyBase{\r\n    constructor(){\r\n        this.param_xml_file = fs.readFileSync(__dirname + '/../../lib/ecpay_payment/ECpayPayment.xml').toString();\r\n        this.param_xml = et.parse(this.param_xml_file);\r\n    }\r\n\r\n    get_svc_url(apiname, mode){\r\n        let url = this.param_xml.findtext(`./${apiname}/ServiceAddress/url[@type=\\\"${mode}\\\"]`);\r\n        return url;\r\n    }\r\n\r\n    get_special_encode_param(apiname){\r\n        let ret = [];\r\n        let node = this.param_xml.findall(`./${apiname}/Parameters//param[@urlencode=\\\"1\\\"]`);\r\n        // console.log(node);\r\n        node.forEach(function (elem) {\r\n            // console.log(elem.attrib.name);\r\n            ret.push(elem.attrib.name);\r\n        });\r\n        return ret;\r\n    }\r\n\r\n    get_basic_params(apiname){\r\n        let basic_param = [];\r\n        this.param_xml.findall(`./${apiname}/Parameters/param[@require=\\\"1\\\"]`).forEach(function (elem) {\r\n           // console.log(elem.attrib.name);\r\n           basic_param.push(elem.attrib.name);\r\n        });\r\n        return basic_param;\r\n    }\r\n\r\n    get_cond_param(apiname){\r\n        let aio_sw_param = [];\r\n        let conditional_param = {};\r\n        this.param_xml.findall(`./${apiname}/Config/switchparam/n`).forEach(function (elem) {\r\n           // console.log(elem.text);\r\n           aio_sw_param.push(elem.text);\r\n        });\r\n        let param_xml = this.param_xml;\r\n        aio_sw_param.forEach(function (pname) {\r\n            let opt_param = {};\r\n            let node = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${pname}\\\"]/condparam`);\r\n            node.forEach(function (elem) {\r\n               let opt = elem.attrib.owner;\r\n               let params = [];\r\n               param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${pname}\\\"]//condparam[@owner=\\\"${opt}\\\"]/param[@require=\"1\"]`).forEach(function (pa) {\r\n                  params.push(pa.attrib.name);\r\n               });\r\n               opt_param[opt] = params;\r\n            });\r\n            conditional_param[pname] = opt_param;\r\n        });\r\n        return conditional_param;\r\n    }\r\n\r\n    get_param_type(apiname){\r\n        let param_type ={};\r\n        this.param_xml.findall(`./${apiname}/Parameters//param`).forEach(function (elem) {\r\n           param_type[elem.attrib.name] = elem.attrib.type;\r\n        });\r\n        return param_type;\r\n    }\r\n\r\n    get_opt_param_pattern(apiname){\r\n        let pattern = {};\r\n        let temp_arr = [];\r\n        let param_xml = this.param_xml;\r\n        let node = this.param_xml.findall(`./${apiname}/Parameters//param[@type=\\\"Opt\\\"]`);\r\n        node.forEach(function (param_elem) {\r\n            temp_arr.push(param_elem.attrib.name);\r\n        });\r\n        // console.log(temp_arr);\r\n        temp_arr.forEach(function (opt_params) {\r\n            // console.log(opt_params);\r\n            let opt_elems = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${opt_params}\\\"]//option`);\r\n            // console.log(opt_elems);\r\n            let opt = [];\r\n            opt_elems.forEach(function (oe) {opt.push(oe.text);});\r\n            // console.log(opt);\r\n            pattern[opt_params] = opt;\r\n        });\r\n        if (apiname === 'AioCheckOut'){\r\n            pattern['ChoosePayment'].splice(3, 13);\r\n        }\r\n        // console.log(pattern);\r\n        return pattern;\r\n    }\r\n\r\n    get_int_param_pattern(apiname){\r\n        let pattern = {};\r\n        let temp_arr = [];\r\n        let param_xml = this.param_xml;\r\n        let node = this.param_xml.findall(`./${apiname}/Parameters//param[@type=\\\"Int\\\"]`);\r\n        node.forEach(function (param_elem) {\r\n            temp_arr.push(param_elem.attrib.name);\r\n        });\r\n        // console.log(temp_arr);\r\n        temp_arr.forEach(function (opt_params) {\r\n            // console.log(opt_params);\r\n            let mode = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${opt_params}\\\"]//mode`);\r\n            let mx = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${opt_params}\\\"]//maximum`);\r\n            let mn = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${opt_params}\\\"]//minimal`);\r\n            // console.log(mode);\r\n            let arr = [];\r\n            mode.forEach(function (md) {arr.push(md.text);});\r\n            mx.forEach(function (mx) {arr.push(mx.text);});\r\n            mn.forEach(function (mn) {arr.push(mn.text);});\r\n            // console.log(arr);\r\n            pattern[opt_params] = arr;\r\n        });\r\n        if (apiname === 'AioCheckOut'){\r\n            pattern['StoreExpireDate'].splice(1, 2);\r\n            pattern['StoreExpireDate'].splice(2, 1);\r\n        }\r\n        // console.log(pattern);\r\n        return pattern;\r\n    }\r\n\r\n    get_str_param_pattern(apiname){\r\n        let pattern = {};\r\n        let temp_arr = [];\r\n        let param_xml = this.param_xml;\r\n        let node = this.param_xml.findall(`./${apiname}/Parameters//param[@type=\\\"String\\\"]`);\r\n        node.forEach(function (param_elem) {\r\n            temp_arr.push(param_elem.attrib.name);\r\n        });\r\n        // console.log(temp_arr);\r\n        temp_arr.forEach(function (opt_params) {\r\n            // console.log(opt_params);\r\n            let pat_elems = param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${opt_params}\\\"]//pattern`);\r\n            let arr = [];\r\n            pat_elems.forEach(function (pa) {arr.push(pa.text);});\r\n            // console.log(arr);\r\n            pattern[opt_params] = arr.toString();\r\n        });\r\n        if (apiname === 'AioCheckOut'){\r\n            pattern['InvoiceMark'] = '';\r\n            pattern['PaymentInfoURL'] = pattern['PaymentInfoURL'].slice(11,21);\r\n            pattern['ClientRedirectURL'] = pattern['ClientRedirectURL'].slice(11,21);\r\n            pattern['Desc_1'] = pattern['Desc_1'].slice(10,20);\r\n            pattern['Desc_2'] = pattern['Desc_2'].slice(10,20);\r\n            pattern['Desc_3'] = pattern['Desc_3'].slice(10,20);\r\n            pattern['Desc_4'] = pattern['Desc_4'].slice(10,20);\r\n        }\r\n        // console.log(pattern);\r\n        return pattern;\r\n    }\r\n\r\n    get_depopt_param_pattern(apiname){\r\n        let pattern = {};\r\n        let param_xml = this.param_xml;\r\n        let p_name, parent_name;\r\n        let k, get_opts;\r\n        let k_opts = [];\r\n        let sub_opts = {};\r\n        let parent_n_opts = {};\r\n        let node = this.param_xml.findall(`./${apiname}/Parameters//param[@type=\\\"DepOpt\\\"]`);\r\n        node.forEach(function (param_elem) {\r\n            p_name = param_elem.attrib.name;\r\n            parent_name = param_elem.attrib.main;\r\n        });\r\n        k = this.param_xml.findall(`./${apiname}/Parameters//param[@name=\\\"${p_name}\\\"]//mainoption`);\r\n        k.forEach(function (elem) {\r\n           k_opts.push(elem.attrib.name);\r\n        });\r\n        k_opts.forEach(function (elem) {\r\n            get_opts = param_xml.findall(`./${apiname}/Parameters//mainoption[@name=\\\"${elem}\\\"]//option`);\r\n            let opt = [];\r\n            get_opts.forEach(function (c) {\r\n                opt.push(c.text);\r\n                sub_opts[elem] = opt;\r\n            });\r\n        });\r\n        // console.log(sub_opts);\r\n        parent_n_opts[parent_name] = sub_opts;\r\n        // console.log(parent_n_opts);\r\n        pattern[p_name] = parent_n_opts;\r\n        // console.log(pattern['ChooseSubPayment']['ChoosePayment']['BARCODE']);\r\n        return pattern;\r\n    }\r\n\r\n    get_all_pattern(apiname){\r\n        let res = {};\r\n        res['Type_idx'] = this.get_param_type(apiname);\r\n        res['Int'] = this.get_int_param_pattern(apiname);\r\n        res['String'] = this.get_str_param_pattern(apiname);\r\n        res['Opt'] = this.get_opt_param_pattern(apiname);\r\n        res['DepOpt'] = this.get_depopt_param_pattern(apiname);\r\n        return res;\r\n    }\r\n\r\n    verify_param_by_pattern(params, pattern){\r\n        // console.log(params);\r\n        // console.log(pattern);\r\n        let type_index = pattern['Type_idx'];\r\n        // console.log(type_index);\r\n        Object.keys(params).forEach(function (p_name) {\r\n           // console.log(p_name);\r\n           let p_type = type_index[p_name];\r\n           // console.log(p_type);\r\n           let patt_container = pattern[p_type];\r\n           // console.log(patt_container);\r\n           switch (p_type) {\r\n               case 'String':\r\n                   let regex_patt = patt_container[p_name];\r\n                   let mat = params[p_name].match(new RegExp(regex_patt));\r\n                   if (mat === null){\r\n                       throw new ECpayError.ECpayInvalidParam(`Wrong format of param ${p_name} or length exceeded.`);\r\n                   }\r\n                   break;\r\n               case 'Opt':\r\n                   let aval_opt = patt_container[p_name];\r\n                   let mat_opt = aval_opt.includes(params[p_name]);\r\n                   if (mat_opt === false){\r\n                       throw new ECpayError.ECpayInvalidParam(`Unexpected option of param ${p_name} (${params[p_name]}). Available option: (${aval_opt}).`);\r\n                   }\r\n                   break;\r\n               case 'Int':\r\n                   let criteria = patt_container[p_name];\r\n                   // console.log('criteria: '+ criteria);\r\n                   let mode = criteria[0];\r\n                   let max = parseInt(criteria[1]);\r\n                   let min = parseInt(criteria[2]);\r\n                   let val = parseInt(params[p_name]);\r\n                   // console.log('mode: '+ mode);\r\n                   // console.log('max: '+  max);\r\n                   // console.log('min: '+  min);\r\n                   // console.log('val: '+  val);\r\n                   switch (mode){\r\n                       case 'BETWEEN':\r\n                           if (val < min || val > max){\r\n                               throw new ECpayError.ECpayInvalidParam(`Value of ${p_name} should be between ${min} and ${max}.`);\r\n                           }\r\n                           break;\r\n                       case 'GE':\r\n                           if (val < min){\r\n                               throw new ECpayError.ECpayInvalidParam(`Value of ${p_name} should be greater than or equal to ${min}.`);\r\n                           }\r\n                           break;\r\n                       case 'LE':\r\n                           if (val > max){\r\n                               throw new ECpayError.ECpayInvalidParam(`Value of ${p_name} should be less than or equal to ${max}.`);\r\n                           }\r\n                           break;\r\n                       case 'EXCLUDE':\r\n                           if (val >= max && val <= max){\r\n                               throw new ECpayError.ECpayInvalidParam(`Value of ${p_name} can NOT be between ${min} and ${max}..`);\r\n                           }\r\n                           break;\r\n                       default:\r\n                           throw new ECpayError.ECpayInvalidParam(`Unexpected integer verification mode for parameter ${p_name}: ${mode}.`);\r\n                   }\r\n                   break;\r\n               case 'DepOpt':\r\n                   let dep_opt = patt_container[p_name];\r\n                   let parent_param = Object.keys(dep_opt)[0];\r\n                   let all_dep_opt = dep_opt[parent_param];\r\n                   let parent_val = params[parent_param];\r\n                   let aval_dopt = all_dep_opt[parent_val];\r\n                   if (aval_dopt === null && pattern['Opt'][parent_param].includes(parent_val) === false){\r\n                       throw new ECpayError.ECpayInvalidParam(`Cannot find available option of [${p_name}] by related param [${parent_param}](Value: ${parent_val}.`);\r\n                   } else if (aval_dopt.constructor === Array){\r\n                       if (!aval_dopt.includes(params[p_name])){\r\n                           throw new ECpayError.ECpayInvalidParam(`Unexpected option of param ${p_name} (${params[p_name]}). Available option: (${aval_dopt}).`);\r\n                       }\r\n                   }\r\n                   break;\r\n               default:\r\n                   throw new Error(`Unexpected type (${p_type}) for parameter ${p_name}.`);\r\n           }\r\n        });\r\n    }\r\n}\r\n\r\nclass AioCheckOutParamVerify extends PaymentVerifyBase{\r\n    constructor(){\r\n        super();\r\n        this.aio_basic_param = this.get_basic_params('AioCheckOut');\r\n        this.aio_conditional_param = this.get_cond_param('AioCheckOut');\r\n        this.all_param_pattern = this.get_all_pattern('AioCheckOut');\r\n    }\r\n\r\n    get_serialized_data(){\r\n        console.log(this.aio_basic_param);\r\n        console.log('-----');\r\n        console.log(this.aio_conditional_param);\r\n        let new_di = this.aio_conditional_param;\r\n        delete new_di['InvoiceMark'];\r\n        console.log(this.aio_conditional_param);\r\n        console.log('-----');\r\n        console.log(new_di);\r\n    }\r\n\r\n    verify_aio_payment_param(params){\r\n        if (params.constructor === Object){\r\n            // Force specify => DeviceSource, IgnorePayment, PlatformID, EncryptType\r\n            let fix_params = {\r\n                DeviceSource: '',\r\n                // PlatformID: '',\r\n                EncryptType: '1',\r\n                PaymentType: 'aio'\r\n            };\r\n            Object.assign(params, fix_params);\r\n            // Verify Basic param requirement\r\n            // if (params === {}){\r\n            //     throw new ECpayError.ECpayInvalidParam(`Parameter object is empty.`);\r\n            // }\r\n\r\n            let basic_param = this.aio_basic_param.sort();\r\n            let input_param = Object.keys(params).sort();\r\n            basic_param.forEach(function (pname) {\r\n               if (input_param.indexOf(pname, 0) === -1){\r\n                   throw new ECpayError.ECpayInvalidParam(`Lack required param ${pname}`);\r\n               }\r\n            });\r\n\r\n            // Verify Extend param requirement\r\n            let ext_param = this.aio_conditional_param;\r\n            delete ext_param['InvoiceMark'];\r\n            Object.keys(ext_param).forEach(function (pa) {\r\n               let val = params[pa];\r\n               let related_required_param = ext_param[pa][val];\r\n               if (related_required_param !== undefined && related_required_param !== []){\r\n                   related_required_param.forEach(function (e) {\r\n                       if (!Object.keys(params).includes(e)){\r\n                           throw new ECpayError.ECpayInvalidParam(`Lack required parameter [${e}] when [${pa}] is set to [${val}].`);\r\n                       }\r\n                   });\r\n               }\r\n            });\r\n\r\n            // Verify Value pattern of each param\r\n            this.verify_param_by_pattern(params, this.all_param_pattern);\r\n        } else {\r\n            throw new TypeError(`Received argument is not a Object.`);\r\n        }\r\n    }\r\n\r\n    verify_aio_inv_param(params){\r\n        if (params.constructor === Object){\r\n            // 發票所有參數預設要全帶\r\n            Object.keys(params).forEach(function (keys) {\r\n               if (params[keys] === null){\r\n                   throw new ECpayError.ECpayInvalidParam(`Parameter value cannot be null.`);\r\n               }\r\n            });\r\n            // 1. 比對欄位是否缺乏\r\n            let inv_param = this.aio_conditional_param['InvoiceMark']['Y'];\r\n            let input_param = Object.keys(params);\r\n            inv_param.forEach(function (pname) {\r\n                if (input_param.indexOf(pname, 0) === -1){\r\n                    throw new ECpayError.ECpayInvalidParam(`Lack required invoice param ${pname}`);\r\n                }\r\n            });\r\n            input_param.forEach(function (pname) {\r\n                if (inv_param.indexOf(pname, 0) === -1){\r\n                    throw new ECpayError.ECpayInvalidParam(`Unexpected parameter in Invoice parameters ${pname}`);\r\n                }\r\n            });\r\n\r\n            // let inv_param_names = this.aio_conditional_param['InvoiceMark']['Y'];\r\n            // let param_diff = inv_param_names - Object.keys(params);\r\n            // if (param_diff !== []){\r\n            //     throw new ECpayError.ECpayInvalidParam(`Lack required invoice param ${param_diff}`);\r\n            // }\r\n            // let unexp_param = Object.keys(params) - inv_param_names;\r\n            // if (unexp_param !== []){\r\n            //     throw new ECpayError.ECpayInvalidParam(`Unexpected parameter in Invoice parameters ${unexp_param}`);\r\n            // }\r\n\r\n            // 2. 比對特殊欄位值相依需求\r\n            // a [CarruerType]為1 => CustomerID 不能為空\r\n            if (params['CarruerType'] === '1'){\r\n                if (params['CustomerID'] === ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CustomerID] can not be empty when [CarruryType] is 1.`);\r\n                }\r\n            } // [CustomerID]不為空 => CarruerType 不能為空\r\n            else if (params['CarruerType'] === ''){\r\n                if (params['CustomerID'] !== ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CarruerType] can not be empty when [CustomerID] is not empty.`);\r\n                }\r\n            }\r\n            // b 列印註記[Print]為1 => CustomerName, CustomerAddr 不能為空\r\n            if (params['Print'] === '1'){\r\n                if (params['CustomerName'] === '' && params['CustomerAddr'] === ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CustomerName] and [CustomerAddr] can not be empty when [Print] is 1.`);\r\n                }\r\n                if (params['CustomerID'] !== ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[Print] can not be '1' when [CustomerID] is not empty.`);\r\n                }\r\n            }\r\n            // c CustomerPhone和CustomerEmail至少一個要有值\r\n            if (params['CustomerPhone'] === '' && params['CustomerEmail'] === ''){\r\n                throw new ECpayError.ECpayInvoiceRuleViolate(`[CustomerPhone] and [CustomerEmail] can not both be empty.`);\r\n            }\r\n            // d 別[TaxType]為2 => ClearanceMark = 1 or 2 and InvoiceItemTaxType must include '2'\r\n            if (params['TaxType'] === '2'){\r\n                if (params['ClearanceMark'] !== '1' && params['ClearanceMark'] !== '2'){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[ClearanceMark] has to be 1 or 2 when [TaxType] is 2.`);\r\n                }\r\n                if (!params['InvoiceItemTaxType'].includes('2')){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[InvoiceItemTaxType] must contain at lease one '2' when [TaxType] is 2.`);\r\n                }\r\n            }\r\n            // e 統一編號[CustomerIdentifier]有值時 => CarruerType != 1 or 2, Donation = 0, Print = 1\r\n            if (params['CustomerIdentifier'] !== ''){\r\n                if (params['CarruerType'] === '1' || params['CarruerType'] === '2'){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CarruerType] Cannot be 1 or 2 when [CustomerIdentifier] is given.`);\r\n                }\r\n            }\r\n            // [CarruerType]為'' or 1 時 : CarruerNum = '', [CarruerType]為2, CarruerNum = 固定長度為16且格式為2碼大小寫字母加上14碼數字。\r\n            // [CarruerType]為3, 固定長度為8且格式為1碼斜線「/」加上7碼數字及大小寫字母組成\r\n            if (params['CarruerType'] === '' || params['CarruerType'] === '1'){\r\n                if (params['CarruerNum'] !== ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CarruerNum] must be empty when [CarruerType] is empty or 1.`);\r\n                }\r\n            } else if (params['CarruerType'] === '2'){\r\n                if (params['CarruerNum'].match(new RegExp(/[A-Za-z]{2}[0-9]{14}/)) === null){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CarruerNum] must be 2 alphabets and 14 numbers when [CarruerType] is 2.`);\r\n                }\r\n            } else if (params['CarruerType'] === '3'){\r\n                if (params['CarruerNum'].match(new RegExp(/^\\/[A-Za-z0-9\\s+-]{7}$/)) === null){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[CarruerNum] must start with '/' followed by 7 alphabet and number characters when [CarruerType] is 3.`);\r\n                }\r\n            } else {\r\n                throw new ECpayError.ECpayInvoiceRuleViolate(`Unexpected value in [CarruerType].`);\r\n            }\r\n            // [CarruerType]有值時，Print必須有為0\r\n            if (params['CarruerType'] !== '' && params['Print'] !== '0'){\r\n                throw new  ECpayError.ECpayInvoiceRuleViolate(`[Print] must be 0 when [CarruerType] has value.`);\r\n            }\r\n            // Donation = 1 => LoveCode不能為空, Print = 0\r\n            if (params['Donation'] === '1'){\r\n                if (params['LoveCode'] === ''){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[LoveCode] cannot be empty when [Donation] is 1.`);\r\n                }\r\n                if (params['Print'] !== '0'){\r\n                    throw new ECpayError.ECpayInvoiceRuleViolate(`[Print] must be 0 when [Donation] is 1.`);\r\n                }\r\n            }\r\n\r\n            // 3. 比對商品名稱，數量，單位，價格，tax項目數量是否一致\r\n            let item_params = ['InvoiceItemCount', 'InvoiceItemWord', 'InvoiceItemPrice', 'InvoiceItemTaxType'];\r\n            // 商品名稱含有管線 => 認為是多樣商品 *InvoiceItemName, *InvoiceItemCount, *InvoiceItemWord, *InvoiceItemPrice, *InvoiceItemTaxType逐一用管線分割，計算數量後與第一個比對\r\n            if (params['InvoiceItemName'] === ''){\r\n                throw new ECpayError.ECpayInvoiceRuleViolate(`[InvoiceItemName] is empty.`);\r\n            } else {\r\n                if (params['InvoiceItemName'].includes('|')){\r\n                    let item_cnt = params['InvoiceItemName'].split('|').length;\r\n                    item_params.forEach(function (param_name) {\r\n                        // Check if there's empty value.\r\n                        if (params[param_name].match(new RegExp(/(\\|\\||^\\||\\|$)/)) !== null){\r\n                            throw new ECpayError.ECpayInvoiceRuleViolate(`[${param_name}] contains empty value.`);\r\n                        }\r\n                        let p_cnt = params[param_name].split('|').length;\r\n                        if (item_cnt !== p_cnt){\r\n                            throw new ECpayError.ECpayInvoiceRuleViolate(`Count of item info [${param_name}] (${p_cnt}) not match count from [InvoiceItemName] (${item_cnt}).`);\r\n                        }\r\n                    });\r\n                    // 課稅類別[TaxType] = 9時 => InvoiceItemTaxType 能含有1,2,3(and at least contains one 1 and other)\r\n                    let item_tax = params['InvoiceItemTaxType'].split('|');\r\n                    let aval_tax_type = ['1', '2', '3'];\r\n                    let vio_tax_t = item_tax - aval_tax_type;\r\n                    if (vio_tax_t === []){\r\n                        throw new ECpayError.ECpayInvoiceRuleViolate(`Illegal [InvoiceItemTaxType]: ${vio_tax_t}`);\r\n                    }\r\n                    if (params['TaxType'] === '9'){\r\n                        if (!item_tax.includes('1')){\r\n                            throw new ECpayError.ECpayInvoiceRuleViolate(`[InvoiceItemTaxType] must contain at lease one '1'.`);\r\n                        }\r\n                        if (item_tax.includes('2') && item_tax.includes('3')){\r\n                            throw new ECpayError.ECpayInvoiceRuleViolate(`[InvoiceItemTaxType] cannot contain 2 and 3 at the same time.`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    // 沒有管線 => 逐一檢查後4項有無管線\r\n                    item_params.forEach(function (param_name) {\r\n                        if (params[param_name].includes('|')){\r\n                            throw new ECpayError.ECpayInvoiceRuleViolate(`Item info [${param_name}] contain pipeline delimiter but there's only one item in param [InvoiceItemName].`);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            // 4. 比對所有欄位Pattern\r\n            this.verify_param_by_pattern(params, this.all_param_pattern);\r\n        } else {\r\n            throw TypeError(`Received argument is not a object.`);\r\n        }\r\n    }\r\n}\r\n\r\nclass QueryParamVerify extends PaymentVerifyBase{\r\n    constructor(apiname){\r\n        super();\r\n        this.aio_basic_param = this.get_basic_params(apiname);\r\n        this.aio_conditional_param = this.get_cond_param(apiname);\r\n        this.all_param_pattern = this.get_all_pattern(apiname);\r\n    }\r\n\r\n    verify_query_param(params){\r\n        if (params.constructor === Object){\r\n            let basic_param = this.aio_basic_param.sort();\r\n            let input_param = Object.keys(params).sort();\r\n            basic_param.forEach(function (pname) {\r\n                if (input_param.indexOf(pname, 0) === -1){\r\n                    throw new ECpayError.ECpayInvalidParam(`Lack required param ${pname}`);\r\n                }\r\n            });\r\n\r\n            // Verify Value pattern of each param\r\n            this.verify_param_by_pattern(params, this.all_param_pattern);\r\n        } else {\r\n          throw new TypeError(`Received argument is not a object`);\r\n        }\r\n    }\r\n}\r\n\r\nclass ActParamVerify extends PaymentVerifyBase{\r\n    constructor(apiname){\r\n        super();\r\n        this.aio_basic_param = this.get_basic_params(apiname);\r\n        this.aio_conditional_param = this.get_cond_param(apiname);\r\n        this.all_param_pattern = this.get_all_pattern(apiname);\r\n    }\r\n\r\n    verify_act_param(params){\r\n        if (params.constructor === Object){\r\n            let basic_param = this.aio_basic_param.sort();\r\n            let input_param = Object.keys(params).sort();\r\n            basic_param.forEach(function (pname) {\r\n                if (input_param.indexOf(pname, 0) === -1){\r\n                    throw new ECpayError.ECpayInvalidParam(`Lack required param ${pname}`);\r\n                }\r\n            });\r\n\r\n            // Verify Value pattern of each param\r\n            this.verify_param_by_pattern(params, this.all_param_pattern);\r\n        } else {\r\n            throw new TypeError(`Received argument is not a object`);\r\n        }\r\n    }\r\n}\r\nmodule.exports = {\r\n    PaymentVerifyBase: PaymentVerifyBase,\r\n    AioCheckOutParamVerify: AioCheckOutParamVerify,\r\n    QueryParamVerify: QueryParamVerify,\r\n    ActParamVerify: ActParamVerify\r\n};"]},"metadata":{},"sourceType":"script"}