{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/LoginForm.jsx\";\nimport React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    email: email,\n    password: password\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u767B\\u5165\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => console.log(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u90F5\\u4EF6\",\n    name: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    onKeyUp: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    onKeyUp: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-primary mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"\\u767B\\u5165\"), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"nav-item nav-link\",\n    to: \"/\\u8A3B\\u518A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"\\u8A3B\\u518A\")))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/LoginForm.jsx"],"names":["React","useState","CustomField","Link","Formik","Form","Yup","LoginForm","email","setEmail","password","setPassword","validationSchema","object","shape","username","string","required","min","confirmPassword","oneOf","ref","initialValues","values","console","log","errors","touched","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    email: email,\n    password: password,\n  };\n\n  return (\n    <div id=\"form\">\n      <h1 id=\"formTitle\">會員登入</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => console.log(values)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <CustomField\n              label=\"郵件\"\n              name=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n              onKeyUp={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n              onKeyUp={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <div className=\"form-group mt-2 d-flex justify-content-center\">\n              <button\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-primary mt-2\"\n              >\n                登入\n              </button>\n              <React.Fragment>\n                <Link className=\"nav-item nav-link\" to=\"/註冊\">\n                  <button className=\"btn btn-primary \">註冊</button>\n                </Link>\n              </React.Fragment>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}