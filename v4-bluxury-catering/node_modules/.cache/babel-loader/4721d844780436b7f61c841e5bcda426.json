{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/LoginForm.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport firebase, { auth, storage } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    authUser\n  } = useContext(UserContext);\n\n  const currentUser = () => {\n    firebase.firestore.collection(\"users\").doc(auth.currentUser.uid).get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n    console.log(currentUser);\n    return currentUser;\n  };\n\n  function handleSignIn() {\n    auth.signInWithEmailAndPassword(email, password).then(() => {\n      //Once the user creation has happened successfully, we can add the currentUser into firestore\n      //with the appropriate details.\n      firebase.firestore().collection(\"users\").doc(auth.currentUser.uid).set({\n        email: email,\n        password: password,\n        username: username,\n        admin: false\n      }) //ensure we catch any errors at this stage to advise us if something does go wrong\n      .catch(error => {\n        console.log(\"Something went wrong with added user to firestore: \", error);\n      });\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // [START_EXCLUDE]\n\n      if (errorCode === \"auth/wrong-password\") {\n        alert(\"Wrong password.\");\n      } else {\n        console.log(errorMessage);\n      }\n    });\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    email: email,\n    password: password\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, authUser && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u767B\\u5165\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => console.log(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u90F5\\u4EF6\",\n    name: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    onKeyUp: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    onKeyUp: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-primary m-auto\",\n    onClick: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"\\u767B\\u5165\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"m-auto\",\n    to: \"/\\u8A3B\\u518A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"\\u8A3B\\u518A\"))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/LoginForm.jsx"],"names":["React","useState","useContext","CustomField","Redirect","Link","Formik","Form","firebase","auth","storage","Yup","UserContext","LoginForm","email","setEmail","password","setPassword","authUser","currentUser","firestore","collection","doc","uid","get","then","exists","console","log","data","catch","error","handleSignIn","signInWithEmailAndPassword","set","username","admin","errorCode","code","errorMessage","message","alert","validationSchema","object","shape","string","required","min","confirmPassword","oneOf","ref","initialValues","values","errors","touched","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport firebase, { auth, storage } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { authUser } = useContext(UserContext);\n\n  const currentUser = () => {\n    firebase.firestore\n      .collection(\"users\")\n      .doc(auth.currentUser.uid)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          console.log(\"Document data:\", doc.data());\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    console.log(currentUser);\n    return currentUser;\n  };\n\n  function handleSignIn() {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        //Once the user creation has happened successfully, we can add the currentUser into firestore\n        //with the appropriate details.\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(auth.currentUser.uid)\n          .set({\n            email: email,\n            password: password,\n            username: username,\n            admin: false,\n          })\n          //ensure we catch any errors at this stage to advise us if something does go wrong\n          .catch((error) => {\n            console.log(\n              \"Something went wrong with added user to firestore: \",\n              error\n            );\n          });\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // [START_EXCLUDE]\n        if (errorCode === \"auth/wrong-password\") {\n          alert(\"Wrong password.\");\n        } else {\n          console.log(errorMessage);\n        }\n      });\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    email: email,\n    password: password,\n  };\n\n  return (\n    <div id=\"form\">\n      {authUser && <Redirect to=\"/\" />}\n      <h1 id=\"formTitle\">會員登入</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => console.log(values)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <CustomField\n              label=\"郵件\"\n              name=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n              onKeyUp={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n              onKeyUp={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <div className=\"form-group mt-4 d-flex justify-content-center\">\n              <button\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-primary m-auto\"\n                onClick={handleSignIn}\n              >\n                登入\n              </button>\n\n              <Link className=\"m-auto\" to=\"/註冊\">\n                <button className=\"btn btn-primary \">註冊</button>\n              </Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}