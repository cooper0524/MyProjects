{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport * as Yup from \"yup\";\nimport Form from \"../common/Form\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\")\n  });\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    acceptTerms: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","logo","Yup","Form","RegisterForm","email","setEmail","password","swtPassword","username","setUsername","validationSchema","object","shape","title","string","required","firstName","lastName","min","confirmPassword","oneOf","ref","acceptTerms","bool","initialValues"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMW,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,KAAK,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADmC;AAE1CC,IAAAA,SAAS,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAF+B;AAG1CE,IAAAA,QAAQ,EAAEhB,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAHgC;AAI1CX,IAAAA,KAAK,EAAEH,GAAG,CAACa,MAAJ,GAAaV,KAAb,CAAmB,kBAAnB,EAAuCW,QAAvC,CAAgD,mBAAhD,CAJmC;AAK1CT,IAAAA,QAAQ,EAAEL,GAAG,CAACa,MAAJ,GACPI,GADO,CACH,CADG,EACA,wCADA,EAEPH,QAFO,CAEE,sBAFF,CALgC;AAQ1CI,IAAAA,eAAe,EAAElB,GAAG,CAACa,MAAJ,GACdM,KADc,CACR,CAACnB,GAAG,CAACoB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADQ,EACqB,sBADrB,EAEdN,QAFc,CAEL,8BAFK,CARyB;AAW1CO,IAAAA,WAAW,EAAErB,GAAG,CAACsB,IAAJ,GAAWH,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,4BAAzB;AAX6B,GAAnB,CAAzB;AAcA,QAAMI,aAAa,GAAG;AACpBX,IAAAA,KAAK,EAAE,EADa;AAEpBG,IAAAA,SAAS,EAAE,EAFS;AAGpBC,IAAAA,QAAQ,EAAE,EAHU;AAIpBb,IAAAA,KAAK,EAAE,EAJa;AAKpBE,IAAAA,QAAQ,EAAE,EALU;AAMpBa,IAAAA,eAAe,EAAE,EANG;AAOpBG,IAAAA,WAAW,EAAE;AAPO,GAAtB;AAUA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnCD;;AAqCA,eAAenB,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport logo from \"../assets/logo.png\";\n\nimport * as Yup from \"yup\";\nimport Form from \"../common/Form\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\"),\n  });\n\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    acceptTerms: false,\n  };\n\n  return (\n    <div id=\"form\">\n      <h1 id=\"formTitle\">會員註冊</h1>\n      <Form />\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}