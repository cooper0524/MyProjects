{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/Memory.jsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport SearchBox from \"../common/SearchBox\";\nimport Filter from \"../common/Filter\";\nimport ProductsGrid from \"../common/ProductsGrid\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport PopupMsg from \"./PopupMsg\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst Memory = () => {\n  const {\n    products\n  } = useContext(ProductsContext);\n  const categories = [\"生乳捲\", \"生乳塔\", \"常溫蛋糕\", \"節慶禮盒\", \"其他商品\"];\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"全部商品\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setSelectedGenre(null);\n  };\n\n  const handleItemCategoryChange = category => {\n    setSelectedGenre(category);\n    setSearchTerm(\"\");\n  };\n\n  useEffect(() => {\n    let results = products;\n    if (searchTerm) results = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));else if (selectedGenre === \"全部商品\") results = products;else if (selectedGenre) results = products.filter(product => product.category === selectedGenre);\n    setSearchResults(results);\n  }, [products, searchTerm, selectedGenre]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: \"baseline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PopupMsg, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-8\",\n    style: {\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    products: products,\n    selectedGenre: selectedGenre,\n    onClick: handleItemCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-4\",\n    style: {\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    products: products,\n    value: searchTerm,\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ProductsGrid, {\n    searchResults: searchResults,\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Memory;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/Memory.jsx"],"names":["React","useContext","useState","useEffect","SearchBox","Filter","ProductsGrid","ProductsContext","PopupMsg","UserContext","Memory","products","categories","searchTerm","setSearchTerm","selectedGenre","setSelectedGenre","searchResults","setSearchResults","handleSearchChange","e","target","value","handleItemCategoryChange","category","results","filter","product","name","toLowerCase","includes","alignItems","paddingTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport SearchBox from \"../common/SearchBox\";\nimport Filter from \"../common/Filter\";\nimport ProductsGrid from \"../common/ProductsGrid\";\nimport { ProductsContext } from \"../contexts/ProductsContext\";\nimport PopupMsg from \"./PopupMsg\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst Memory = () => {\n  const { products } = useContext(ProductsContext);\n\n  const categories = [\"生乳捲\", \"生乳塔\", \"常溫蛋糕\", \"節慶禮盒\", \"其他商品\"];\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"全部商品\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n    setSelectedGenre(null);\n  };\n  const handleItemCategoryChange = (category) => {\n    setSelectedGenre(category);\n    setSearchTerm(\"\");\n  };\n  useEffect(() => {\n    let results = products;\n    if (searchTerm)\n      results = products.filter((product) =>\n        product.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    else if (selectedGenre === \"全部商品\") results = products;\n    else if (selectedGenre)\n      results = products.filter(\n        (product) => product.category === selectedGenre\n      );\n\n    setSearchResults(results);\n  }, [products, searchTerm, selectedGenre]);\n\n  return (\n    <div style={{ alignItems: \"baseline\" }}>\n      <PopupMsg categories={categories} />\n      <div className=\"row\">\n        <div className=\"col-sm-8\" style={{ paddingTop: \"20px\" }}>\n          <Filter\n            products={products}\n            selectedGenre={selectedGenre}\n            onClick={handleItemCategoryChange}\n          />\n        </div>\n        <div className=\"col-sm-4\" style={{ paddingTop: \"20px\" }}>\n          <SearchBox\n            products={products}\n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n        </div>\n      </div>\n      <ProductsGrid searchResults={searchResults} categories={categories} />\n    </div>\n  );\n};\n\nexport default Memory;\n"]},"metadata":{},"sourceType":"module"}