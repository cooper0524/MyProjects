{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/v4-bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport firebase, { auth } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport useFetchUser from \"../customHook/useFetchUser\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const authUser = useFetchUser();\n\n  function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(() => {\n      //Once the user creation has happened successfully, we can add the currentUser into firestore\n      //with the appropriate details.\n      firebase.firestore().collection(\"users\").doc(auth.currentUser.uid).set({\n        email: email,\n        password: password,\n        username: username,\n        admin: false\n      }) //ensure we catch any errors at this stage to advise us if something does go wrong\n      .catch(error => {\n        console.log(\"Something went wrong with added user to firestore: \", error);\n      });\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // [START_EXCLUDE]\n\n      if (errorCode === \"auth/weak-password\") {\n        alert(\"The password is too weak.\");\n      } else {\n        console.log(errorMessage);\n      } // [END_EXCLUDE]\n\n    }); // [END createwithemail]\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    username: username,\n    email: email,\n    password: password,\n    confirmPassword: confirmPassword\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, authUser && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => console.log(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u540D\\u7A31\",\n    name: \"username\",\n    type: \"text\",\n    errors: errors.username,\n    touched: touched.username,\n    onKeyUp: e => {\n      setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u90F5\\u4EF6\",\n    name: \"email\",\n    type: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    onKeyUp: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    type: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    onKeyUp: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u78BA\\u8A8D\\u5BC6\\u78BC\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    errors: errors.confirmPassword,\n    touched: touched.confirmPassword,\n    onKeyUp: e => {\n      setConfirmPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-primary mt-2\",\n    onClick: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"\\u78BA\\u8A8D\\u9001\\u51FA\")))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/v4-bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","CustomField","Redirect","Formik","Form","firebase","auth","Yup","useFetchUser","RegisterForm","email","setEmail","password","setPassword","username","setUsername","confirmPassword","setConfirmPassword","authUser","handleSignUp","createUserWithEmailAndPassword","then","firestore","collection","doc","currentUser","uid","set","admin","catch","error","console","log","errorCode","code","errorMessage","message","alert","validationSchema","object","shape","string","required","min","oneOf","ref","initialValues","values","errors","touched","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,QAAP,IAAmBC,IAAnB,QAA+B,sBAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMkB,QAAQ,GAAGV,YAAY,EAA7B;;AAEA,WAASW,YAAT,GAAwB;AACtBb,IAAAA,IAAI,CACDc,8BADH,CACkCV,KADlC,EACyCE,QADzC,EAEGS,IAFH,CAEQ,MAAM;AACV;AACA;AACAhB,MAAAA,QAAQ,CACLiB,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,GAHH,CAGOlB,IAAI,CAACmB,WAAL,CAAiBC,GAHxB,EAIGC,GAJH,CAIO;AACHjB,QAAAA,KAAK,EAAEA,KADJ;AAEHE,QAAAA,QAAQ,EAAEA,QAFP;AAGHE,QAAAA,QAAQ,EAAEA,QAHP;AAIHc,QAAAA,KAAK,EAAE;AAJJ,OAJP,EAUE;AAVF,OAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CACE,qDADF,EAEEF,KAFF;AAID,OAhBH;AAiBD,KAtBH,EAuBGD,KAvBH,CAuBS,UAAUC,KAAV,EAAiB;AACtB;AACA,UAAIG,SAAS,GAAGH,KAAK,CAACI,IAAtB;AACA,UAAIC,YAAY,GAAGL,KAAK,CAACM,OAAzB,CAHsB,CAItB;;AACA,UAAIH,SAAS,KAAK,oBAAlB,EAAwC;AACtCI,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACD,OATqB,CAWtB;;AACD,KAnCH,EADsB,CAqCtB;AACD;;AAED,QAAMG,gBAAgB,GAAG/B,GAAG,CAACgC,MAAJ,GAAaC,KAAb,CAAmB;AAC1C1B,IAAAA,QAAQ,EAAEP,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CADgC;AAE1ChC,IAAAA,KAAK,EAAEH,GAAG,CAACkC,MAAJ,GAAa/B,KAAb,CAAmB,kBAAnB,EAAuCgC,QAAvC,CAAgD,mBAAhD,CAFmC;AAG1C9B,IAAAA,QAAQ,EAAEL,GAAG,CAACkC,MAAJ,GACPE,GADO,CACH,CADG,EACA,wCADA,EAEPD,QAFO,CAEE,sBAFF,CAHgC;AAM1C1B,IAAAA,eAAe,EAAET,GAAG,CAACkC,MAAJ,GACdG,KADc,CACR,CAACrC,GAAG,CAACsC,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADQ,EACqB,sBADrB,EAEdH,QAFc,CAEL,8BAFK;AANyB,GAAnB,CAAzB;AAWA,QAAMI,aAAa,GAAG;AACpBhC,IAAAA,QAAQ,EAAEA,QADU;AAEpBJ,IAAAA,KAAK,EAAEA,KAFa;AAGpBE,IAAAA,QAAQ,EAAEA,QAHU;AAIpBI,IAAAA,eAAe,EAAEA;AAJG,GAAtB;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,eAEE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,eAGE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE4B,aADjB;AAEE,IAAA,gBAAgB,EAAER,gBAFpB;AAGE,IAAA,QAAQ,EAAGS,MAAD,IAAYhB,OAAO,CAACC,GAAR,CAAYe,MAAZ,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAED,MAAM,CAAClC,QAJjB;AAKE,IAAA,OAAO,EAAEmC,OAAO,CAACnC,QALnB;AAME,IAAA,OAAO,EAAGoC,CAAD,IAAO;AACdnC,MAAAA,WAAW,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAEJ,MAAM,CAACtC,KAJjB;AAKE,IAAA,OAAO,EAAEuC,OAAO,CAACvC,KALnB;AAME,IAAA,OAAO,EAAGwC,CAAD,IAAO;AACdvC,MAAAA,QAAQ,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAqBE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,MAAM,EAAEJ,MAAM,CAACpC,QAJjB;AAKE,IAAA,OAAO,EAAEqC,OAAO,CAACrC,QALnB;AAME,IAAA,OAAO,EAAGsC,CAAD,IAAO;AACdrC,MAAAA,WAAW,CAACqC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eA+BE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,0BADR;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,MAAM,EAAEJ,MAAM,CAAChC,eAJjB;AAKE,IAAA,OAAO,EAAEiC,OAAO,CAACjC,eALnB;AAME,IAAA,OAAO,EAAGkC,CAAD,IAAO;AACdjC,MAAAA,kBAAkB,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eA0CE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,sBAHZ;AAIE,IAAA,OAAO,EAAEjC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CA1CF,CANJ,CAHF,CADF;AAmED,CArID;;AAuIA,eAAeV,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport firebase, { auth } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport useFetchUser from \"../customHook/useFetchUser\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const authUser = useFetchUser();\n\n  function handleSignUp() {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        //Once the user creation has happened successfully, we can add the currentUser into firestore\n        //with the appropriate details.\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(auth.currentUser.uid)\n          .set({\n            email: email,\n            password: password,\n            username: username,\n            admin: false,\n          })\n          //ensure we catch any errors at this stage to advise us if something does go wrong\n          .catch((error) => {\n            console.log(\n              \"Something went wrong with added user to firestore: \",\n              error\n            );\n          });\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // [START_EXCLUDE]\n        if (errorCode === \"auth/weak-password\") {\n          alert(\"The password is too weak.\");\n        } else {\n          console.log(errorMessage);\n        }\n\n        // [END_EXCLUDE]\n      });\n    // [END createwithemail]\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    username: username,\n    email: email,\n    password: password,\n    confirmPassword: confirmPassword,\n  };\n\n  return (\n    <div id=\"form\">\n      {authUser && <Redirect to=\"/\" />}\n      <h1 id=\"formTitle\">會員註冊</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => console.log(values)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <CustomField\n              label=\"名稱\"\n              name=\"username\"\n              type=\"text\"\n              errors={errors.username}\n              touched={touched.username}\n              onKeyUp={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"郵件\"\n              name=\"email\"\n              type=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n              onKeyUp={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              type=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n              onKeyUp={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"確認密碼\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              errors={errors.confirmPassword}\n              touched={touched.confirmPassword}\n              onKeyUp={(e) => {\n                setConfirmPassword(e.target.value);\n              }}\n            />\n\n            <div className=\"form-group mt-2\">\n              <button\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-primary mt-2\"\n                onClick={handleSignUp}\n              >\n                確認送出\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}