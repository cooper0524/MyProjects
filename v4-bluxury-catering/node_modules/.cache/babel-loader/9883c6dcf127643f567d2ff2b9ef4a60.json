{"ast":null,"code":"var util = require('util');\n\nvar sax = require('sax');\n\nvar TreeBuilder = require('./../treebuilder').TreeBuilder;\n\nfunction XMLParser(target) {\n  this.parser = sax.parser(true);\n  this.target = target ? target : new TreeBuilder();\n  this.parser.onopentag = this._handleOpenTag.bind(this);\n  this.parser.ontext = this._handleText.bind(this);\n  this.parser.oncdata = this._handleCdata.bind(this);\n  this.parser.ondoctype = this._handleDoctype.bind(this);\n  this.parser.oncomment = this._handleComment.bind(this);\n  this.parser.onclosetag = this._handleCloseTag.bind(this);\n  this.parser.onerror = this._handleError.bind(this);\n}\n\nXMLParser.prototype._handleOpenTag = function (tag) {\n  this.target.start(tag.name, tag.attributes);\n};\n\nXMLParser.prototype._handleText = function (text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleCdata = function (text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleDoctype = function (text) {};\n\nXMLParser.prototype._handleComment = function (comment) {};\n\nXMLParser.prototype._handleCloseTag = function (tag) {\n  this.target.end(tag);\n};\n\nXMLParser.prototype._handleError = function (err) {\n  throw err;\n};\n\nXMLParser.prototype.feed = function (chunk) {\n  this.parser.write(chunk);\n};\n\nXMLParser.prototype.close = function () {\n  this.parser.close();\n  return this.target.close();\n};\n\nexports.XMLParser = XMLParser;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/elementtree/lib/parsers/sax.js"],"names":["util","require","sax","TreeBuilder","XMLParser","target","parser","onopentag","_handleOpenTag","bind","ontext","_handleText","oncdata","_handleCdata","ondoctype","_handleDoctype","oncomment","_handleComment","onclosetag","_handleCloseTag","onerror","_handleError","prototype","tag","start","name","attributes","text","data","comment","end","err","feed","chunk","write","close","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,kBAAD,CAAP,CAA4BE,WAA9C;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,OAAKC,MAAL,GAAcJ,GAAG,CAACI,MAAJ,CAAW,IAAX,CAAd;AAEA,OAAKD,MAAL,GAAeA,MAAD,GAAWA,MAAX,GAAoB,IAAIF,WAAJ,EAAlC;AAEA,OAAKG,MAAL,CAAYC,SAAZ,GAAwB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAxB;AACA,OAAKH,MAAL,CAAYI,MAAZ,GAAqB,KAAKC,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAArB;AACA,OAAKH,MAAL,CAAYM,OAAZ,GAAsB,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAAtB;AACA,OAAKH,MAAL,CAAYQ,SAAZ,GAAwB,KAAKC,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAAxB;AACA,OAAKH,MAAL,CAAYU,SAAZ,GAAwB,KAAKC,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,CAAxB;AACA,OAAKH,MAAL,CAAYY,UAAZ,GAAyB,KAAKC,eAAL,CAAqBV,IAArB,CAA0B,IAA1B,CAAzB;AACA,OAAKH,MAAL,CAAYc,OAAZ,GAAsB,KAAKC,YAAL,CAAkBZ,IAAlB,CAAuB,IAAvB,CAAtB;AACD;;AAEDL,SAAS,CAACkB,SAAV,CAAoBd,cAApB,GAAqC,UAASe,GAAT,EAAc;AACjD,OAAKlB,MAAL,CAAYmB,KAAZ,CAAkBD,GAAG,CAACE,IAAtB,EAA4BF,GAAG,CAACG,UAAhC;AACD,CAFD;;AAIAtB,SAAS,CAACkB,SAAV,CAAoBX,WAApB,GAAkC,UAASgB,IAAT,EAAe;AAC/C,OAAKtB,MAAL,CAAYuB,IAAZ,CAAiBD,IAAjB;AACD,CAFD;;AAIAvB,SAAS,CAACkB,SAAV,CAAoBT,YAApB,GAAmC,UAASc,IAAT,EAAe;AAChD,OAAKtB,MAAL,CAAYuB,IAAZ,CAAiBD,IAAjB;AACD,CAFD;;AAIAvB,SAAS,CAACkB,SAAV,CAAoBP,cAApB,GAAqC,UAASY,IAAT,EAAe,CACnD,CADD;;AAGAvB,SAAS,CAACkB,SAAV,CAAoBL,cAApB,GAAqC,UAASY,OAAT,EAAkB,CACtD,CADD;;AAGAzB,SAAS,CAACkB,SAAV,CAAoBH,eAApB,GAAsC,UAASI,GAAT,EAAc;AAClD,OAAKlB,MAAL,CAAYyB,GAAZ,CAAgBP,GAAhB;AACD,CAFD;;AAIAnB,SAAS,CAACkB,SAAV,CAAoBD,YAApB,GAAmC,UAASU,GAAT,EAAc;AAC/C,QAAMA,GAAN;AACD,CAFD;;AAIA3B,SAAS,CAACkB,SAAV,CAAoBU,IAApB,GAA2B,UAASC,KAAT,EAAgB;AACzC,OAAK3B,MAAL,CAAY4B,KAAZ,CAAkBD,KAAlB;AACD,CAFD;;AAIA7B,SAAS,CAACkB,SAAV,CAAoBa,KAApB,GAA4B,YAAW;AACrC,OAAK7B,MAAL,CAAY6B,KAAZ;AACA,SAAO,KAAK9B,MAAL,CAAY8B,KAAZ,EAAP;AACD,CAHD;;AAKAC,OAAO,CAAChC,SAAR,GAAoBA,SAApB","sourcesContent":["var util = require('util');\n\nvar sax = require('sax');\n\nvar TreeBuilder = require('./../treebuilder').TreeBuilder;\n\nfunction XMLParser(target) {\n  this.parser = sax.parser(true);\n\n  this.target = (target) ? target : new TreeBuilder();\n\n  this.parser.onopentag = this._handleOpenTag.bind(this);\n  this.parser.ontext = this._handleText.bind(this);\n  this.parser.oncdata = this._handleCdata.bind(this);\n  this.parser.ondoctype = this._handleDoctype.bind(this);\n  this.parser.oncomment = this._handleComment.bind(this);\n  this.parser.onclosetag = this._handleCloseTag.bind(this);\n  this.parser.onerror = this._handleError.bind(this);\n}\n\nXMLParser.prototype._handleOpenTag = function(tag) {\n  this.target.start(tag.name, tag.attributes);\n};\n\nXMLParser.prototype._handleText = function(text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleCdata = function(text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleDoctype = function(text) {\n};\n\nXMLParser.prototype._handleComment = function(comment) {\n};\n\nXMLParser.prototype._handleCloseTag = function(tag) {\n  this.target.end(tag);\n};\n\nXMLParser.prototype._handleError = function(err) {\n  throw err;\n};\n\nXMLParser.prototype.feed = function(chunk) {\n  this.parser.write(chunk);\n};\n\nXMLParser.prototype.close = function() {\n  this.parser.close();\n  return this.target.close();\n};\n\nexports.XMLParser = XMLParser;\n"]},"metadata":{},"sourceType":"script"}