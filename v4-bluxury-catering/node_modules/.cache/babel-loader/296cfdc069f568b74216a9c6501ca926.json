{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      title: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      acceptTerms: false\n    },\n    validationSchema: Yup.object().shape({\n      title: Yup.string().required(\"Title is required\"),\n      firstName: Yup.string().required(\"First Name is required\"),\n      lastName: Yup.string().required(\"Last Name is required\"),\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\"),\n      acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\")\n    }),\n    onSubmit: fields => {\n      alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","logo","Formik","Form","Field","ErrorMessage","Yup","RegisterForm","email","setEmail","password","swtPassword","username","setUsername","validationSchema","object","shape","firstName","string","required","lastName","min","confirmPassword","oneOf","ref","title","acceptTerms","bool","fields","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport logo from \"../assets/logo.png\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          title: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          acceptTerms: false,\n        }}\n        validationSchema={Yup.object().shape({\n          title: Yup.string().required(\"Title is required\"),\n          firstName: Yup.string().required(\"First Name is required\"),\n          lastName: Yup.string().required(\"Last Name is required\"),\n          email: Yup.string()\n            .email(\"Email is invalid\")\n            .required(\"Email is required\"),\n          password: Yup.string()\n            .min(6, \"Password must be at least 6 characters\")\n            .required(\"Password is required\"),\n          confirmPassword: Yup.string()\n            .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n            .required(\"Confirm Password is required\"),\n          acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\"),\n        })}\n        onSubmit={(fields) => {\n          alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n        }}\n      ></Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}