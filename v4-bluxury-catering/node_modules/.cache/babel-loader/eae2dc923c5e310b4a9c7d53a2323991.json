{"ast":null,"code":"/**\r\n * Created by ying.wu on 2017/6/21.\r\n */\nconst helper = require('./helper.js');\n\nconst verify = require('./verification.js');\n\nconst ECpayError = require('./error.js');\n\nconst crypto = require('crypto');\n\nconst url = require('url');\n\nconst querystring = require('querystring');\n\nconst http = require('http');\n\nconst https = require('https');\n\nclass ECpayPaymentClient {\n  constructor() {\n    this.helper = new helper();\n    this.verify_aiochkout = new verify.AioCheckOutParamVerify();\n  }\n\n  aio_check_out_all(parameters, invoice = {}) {\n    let unsupport = [];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'ALL'); // handle Ignore Payment\n\n\n    parameters['IgnorePayment'] = this.helper.get_ignore_pay().join('#');\n\n    let html = this._aiochkout_pos_proc(parameters);\n\n    return html;\n  }\n\n  aio_check_out_credit_onetime(parameters, invoice = {}) {\n    let unsupport = [];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\n\n    let html = this._aiochkout_pos_proc(parameters);\n\n    return html;\n  } //<!--2019/09/30暫時關閉GooglePay付款方式-->\n\n  /*aio_check_out_googlepay(parameters, invoice={}){\r\n      let unsupport = [];\r\n      this._aiochkout_base_proc(parameters, invoice, unsupport, 'GooglePay');\r\n      let html = this._aiochkout_pos_proc(parameters);\r\n      return html;\r\n  }*/\n\n\n  aio_check_out_credit_divide(parameters, invoice = {}, installment, amount) {\n    let unsupport = ['IgnorePayment', 'Redeem', 'PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\n\n    parameters['CreditInstallment'] = installment;\n\n    if (parseInt(parameters['TotalAmount']) !== parseInt(amount)) {\n      parameters['InstallmentAmount'] = amount;\n    }\n\n    let html = this._aiochkout_pos_proc(parameters);\n\n    return html;\n  }\n\n  aio_check_out_credit_period(period_info, parameters, invoice = {}) {\n    // 'PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'\n    let unsupport = ['IgnorePayment', 'Redeem', 'CreditInstallment', 'InstallmentAmount'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\n\n    if (period_info.constructor === Object) {\n      let period_args = ['PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'];\n      period_args.sort().forEach(function (pname) {\n        if (Object.keys(period_info).sort().indexOf(pname, 0) === -1) {\n          throw new Error(`Credit card period parameters must be ${period_args}.`);\n        }\n      });\n      Object.assign(parameters, period_info); // Add total amount protection!!!\n\n      let html = this._aiochkout_pos_proc(parameters);\n\n      return html;\n    } else {\n      throw new Error(`Received period_info argument must be a Object.`);\n    }\n  }\n\n  aio_check_out_atm(parameters, url_return_payinfo = '', exp_period = '', client_redirect = '', invoice = {}) {\n    let unsupport = ['IgnorePayment'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'ATM');\n\n    if (exp_period === '') {\n      delete parameters['ExpireDate'];\n    } else {\n      parameters['ExpireDate'] = exp_period;\n    }\n\n    if (client_redirect === '') {\n      delete parameters['ClientRedirectURL'];\n    } else {\n      parameters['ClientRedirectURL'] = client_redirect;\n    }\n\n    if (url_return_payinfo === '') {\n      delete parameters['PaymentInfoURL'];\n    } else {\n      parameters['PaymentInfoURL'] = url_return_payinfo;\n    }\n\n    let html = this._aiochkout_pos_proc(parameters);\n\n    return html;\n  }\n\n  aio_check_out_webatm(parameters, invoice = {}) {\n    let unsupport = ['IgnorePayment'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'WebATM');\n\n    let html = this._aiochkout_pos_proc(parameters);\n\n    return html;\n  }\n\n  aio_check_out_cvs(cvs_info, parameters, invoice = {}, client_redirect_url = '') {\n    let unsupport = ['IgnorePayment'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'CVS');\n\n    if (cvs_info.constructor === Object) {\n      let cvs_args = ['StoreExpireDate', 'Desc_1', 'Desc_2', 'Desc_3', 'Desc_4', 'PaymentInfoURL'];\n      cvs_args.sort().forEach(function (pname) {\n        if (Object.keys(cvs_info).sort().indexOf(pname, 0) === -1) {\n          throw new Error(`CVS info keys must match ${cvs_args}.`);\n        }\n      });\n      Object.assign(parameters, cvs_info);\n\n      if (client_redirect_url === '' || client_redirect_url === null) {\n        delete parameters['ClientRedirectURL'];\n      } else {\n        parameters['ClientRedirectURL'] = client_redirect_url;\n      }\n\n      let html = this._aiochkout_pos_proc(parameters);\n\n      return html;\n    } else {\n      throw new Error(`Received cvs_info argument must be a Object.`);\n    }\n  }\n\n  aio_check_out_barcode(barcode_info, parameters, invoice = {}, client_redirect_url = '') {\n    let unsupport = ['IgnorePayment'];\n\n    this._aiochkout_base_proc(parameters, invoice, unsupport, 'BARCODE');\n\n    if (barcode_info.constructor === Object) {\n      let barcode_args = ['StoreExpireDate', 'Desc_1', 'Desc_2', 'Desc_3', 'Desc_4', 'PaymentInfoURL'];\n      barcode_args.sort().forEach(function (pname) {\n        if (Object.keys(barcode_info).sort().indexOf(pname, 0) === -1) {\n          throw new Error(`BARCODE info keys must match ${barcode_args}.`);\n        }\n      });\n      Object.assign(parameters, barcode_info);\n\n      if (client_redirect_url === '' || client_redirect_url === null) {\n        delete parameters['ClientRedirectURL'];\n      } else {\n        parameters['ClientRedirectURL'] = client_redirect_url;\n      }\n\n      let html = this._aiochkout_pos_proc(parameters);\n\n      return html;\n    } else {\n      throw new Error(`Received cvs_info argument must be a Object.`);\n    }\n  }\n\n  _aiochkout_base_proc(params, inv, unsupport_param, pay_method) {\n    if (params.constructor === Object) {\n      // Remove  IgnorePayment\n      if (unsupport_param.constructor === Array) {\n        unsupport_param.forEach(function (pa) {\n          delete params[pa];\n        });\n      } else {\n        throw new Error(`argument unsupport_param must be an Array.`);\n      } // User doesn't have to specify ChoosePayment\n\n\n      params['ChoosePayment'] = pay_method; // Process PlatformID & MerchantID by contractor setting\n\n      if (this.helper.is_contractor()) {\n        params['PlatformID'] = this.helper.get_mercid();\n\n        if (params['MerchantID'] === null) {\n          throw new Error(`[MerchantID] should be specified when you're contractor-Platform.`);\n        }\n      } else {\n        params['PlatformID'] = '';\n        params['MerchantID'] = this.helper.get_mercid();\n      } // InvoiceMark based on keyword argument: invoice\n\n\n      if (inv.constructor === Object && Object.keys(inv).length === 0) {\n        params['InvoiceMark'] = 'N';\n      } else {\n        params['InvoiceMark'] = 'Y';\n        this.verify_aiochkout.verify_aio_inv_param(inv); // this.verify_aiochkout.AioCheckOutParamVerify().verify_aio_inv_param(inv);\n        // merge param & inv param\n\n        Object.assign(params, inv);\n      }\n    } else {\n      throw new ECpayError.ECpayInvalidParam(`Received parameter object must be a Object.`);\n    }\n  }\n\n  _aiochkout_pos_proc(params) {\n    this.verify_aiochkout.verify_aio_payment_param(params); // encode special param\n\n    let sp_param = this.verify_aiochkout.get_special_encode_param('AioCheckOut');\n    this.helper.encode_special_param(params, sp_param); // Insert chkmacval\n    // console.log(params);\n\n    let chkmac = this.helper.gen_chk_mac_value(params);\n    params['CheckMacValue'] = chkmac; // gen post html\n\n    let api_url = this.verify_aiochkout.get_svc_url('AioCheckOut', this.helper.get_op_mode());\n    let htm = this.helper.gen_html_post_form(api_url, '_form_aiochk', params); //return post htm\n\n    return htm;\n  }\n\n}\n\nmodule.exports = ECpayPaymentClient;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/ECPAY_Payment_node_js/lib/ecpay_payment/payment_client.js"],"names":["helper","require","verify","ECpayError","crypto","url","querystring","http","https","ECpayPaymentClient","constructor","verify_aiochkout","AioCheckOutParamVerify","aio_check_out_all","parameters","invoice","unsupport","_aiochkout_base_proc","get_ignore_pay","join","html","_aiochkout_pos_proc","aio_check_out_credit_onetime","aio_check_out_credit_divide","installment","amount","parseInt","aio_check_out_credit_period","period_info","Object","period_args","sort","forEach","pname","keys","indexOf","Error","assign","aio_check_out_atm","url_return_payinfo","exp_period","client_redirect","aio_check_out_webatm","aio_check_out_cvs","cvs_info","client_redirect_url","cvs_args","aio_check_out_barcode","barcode_info","barcode_args","params","inv","unsupport_param","pay_method","Array","pa","is_contractor","get_mercid","length","verify_aio_inv_param","ECpayInvalidParam","verify_aio_payment_param","sp_param","get_special_encode_param","encode_special_param","chkmac","gen_chk_mac_value","api_url","get_svc_url","get_op_mode","htm","gen_html_post_form","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Created by ying.wu on 2017/6/21.\r\n */\r\nconst helper = require('./helper.js');\r\nconst verify = require('./verification.js');\r\nconst ECpayError = require('./error.js');\r\nconst crypto = require('crypto');\r\nconst url = require('url');\r\nconst querystring = require('querystring');\r\nconst http = require('http');\r\nconst https = require('https');\r\n\r\nclass ECpayPaymentClient{\r\n    constructor(){\r\n        this.helper = new helper();\r\n        this.verify_aiochkout = new verify.AioCheckOutParamVerify();\r\n    }\r\n\r\n    aio_check_out_all(parameters, invoice={}){\r\n        let unsupport = [];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'ALL');\r\n        // handle Ignore Payment\r\n        parameters['IgnorePayment'] = this.helper.get_ignore_pay().join('#');\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }\r\n\r\n    aio_check_out_credit_onetime(parameters, invoice={}){\r\n        let unsupport = [];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }\r\n    //<!--2019/09/30暫時關閉GooglePay付款方式-->\r\n    /*aio_check_out_googlepay(parameters, invoice={}){\r\n        let unsupport = [];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'GooglePay');\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }*/\r\n\r\n    aio_check_out_credit_divide(parameters, invoice={}, installment, amount){\r\n        let unsupport = ['IgnorePayment', 'Redeem', 'PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\r\n        parameters['CreditInstallment'] = installment;\r\n        if (parseInt(parameters['TotalAmount']) !== parseInt(amount)){\r\n            parameters['InstallmentAmount'] = amount;\r\n        }\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }\r\n\r\n    aio_check_out_credit_period(period_info, parameters, invoice={}){\r\n        // 'PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'\r\n        let unsupport = ['IgnorePayment', 'Redeem', 'CreditInstallment', 'InstallmentAmount'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'Credit');\r\n        if (period_info.constructor === Object){\r\n            let period_args = ['PeriodAmount', 'PeriodType', 'Frequency', 'ExecTimes', 'PeriodReturnURL'];\r\n            period_args.sort().forEach(function (pname) {\r\n                if (Object.keys(period_info).sort().indexOf(pname, 0) === -1){\r\n                    throw new Error(`Credit card period parameters must be ${period_args}.`);\r\n                }\r\n            });\r\n            Object.assign(parameters, period_info);\r\n                // Add total amount protection!!!\r\n\r\n            let html = this._aiochkout_pos_proc(parameters);\r\n            return html;\r\n        } else {\r\n            throw new Error(`Received period_info argument must be a Object.`);\r\n        }\r\n    }\r\n\r\n    aio_check_out_atm(parameters, url_return_payinfo = '', exp_period = '', client_redirect = '', invoice = {}){\r\n        let unsupport = ['IgnorePayment'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'ATM');\r\n        if (exp_period === ''){\r\n            delete parameters['ExpireDate'];\r\n        } else {\r\n            parameters['ExpireDate'] = exp_period;\r\n        }\r\n        if (client_redirect === ''){\r\n            delete parameters['ClientRedirectURL'];\r\n        } else {\r\n            parameters['ClientRedirectURL'] = client_redirect;\r\n        }\r\n        if (url_return_payinfo === ''){\r\n            delete parameters['PaymentInfoURL'];\r\n        } else {\r\n            parameters['PaymentInfoURL'] = url_return_payinfo;\r\n        }\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }\r\n\r\n    aio_check_out_webatm(parameters, invoice = {}){\r\n        let unsupport = ['IgnorePayment'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'WebATM');\r\n        let html = this._aiochkout_pos_proc(parameters);\r\n        return html;\r\n    }\r\n\r\n    aio_check_out_cvs(cvs_info, parameters, invoice = {}, client_redirect_url = ''){\r\n        let unsupport = ['IgnorePayment'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'CVS');\r\n        if (cvs_info.constructor === Object){\r\n            let cvs_args = ['StoreExpireDate', 'Desc_1', 'Desc_2', 'Desc_3', 'Desc_4', 'PaymentInfoURL'];\r\n            cvs_args.sort().forEach(function (pname) {\r\n                if (Object.keys(cvs_info).sort().indexOf(pname, 0) === -1){\r\n                    throw new Error(`CVS info keys must match ${cvs_args}.`);\r\n                }\r\n            });\r\n\r\n            Object.assign(parameters, cvs_info);\r\n            if (client_redirect_url === '' || client_redirect_url === null){\r\n                delete parameters['ClientRedirectURL'];\r\n            } else {\r\n                parameters['ClientRedirectURL'] = client_redirect_url;\r\n            }\r\n            let html = this._aiochkout_pos_proc(parameters);\r\n            return html;\r\n        } else {\r\n            throw new Error(`Received cvs_info argument must be a Object.`);\r\n        }\r\n    }\r\n\r\n    aio_check_out_barcode(barcode_info, parameters, invoice = {}, client_redirect_url = ''){\r\n        let unsupport = ['IgnorePayment'];\r\n        this._aiochkout_base_proc(parameters, invoice, unsupport, 'BARCODE');\r\n        if (barcode_info.constructor === Object){\r\n            let barcode_args = ['StoreExpireDate', 'Desc_1', 'Desc_2', 'Desc_3', 'Desc_4', 'PaymentInfoURL'];\r\n            barcode_args.sort().forEach(function (pname) {\r\n                if (Object.keys(barcode_info).sort().indexOf(pname, 0) === -1){\r\n                    throw new Error(`BARCODE info keys must match ${barcode_args}.`);\r\n                }\r\n            });\r\n            Object.assign(parameters, barcode_info);\r\n            if (client_redirect_url === '' || client_redirect_url === null){\r\n                delete parameters['ClientRedirectURL'];\r\n            } else {\r\n                parameters['ClientRedirectURL'] = client_redirect_url;\r\n            }\r\n            let html = this._aiochkout_pos_proc(parameters);\r\n            return html;\r\n        } else {\r\n            throw new Error(`Received cvs_info argument must be a Object.`);\r\n        }\r\n    }\r\n\r\n    _aiochkout_base_proc(params, inv, unsupport_param, pay_method){\r\n        if (params.constructor === Object){\r\n            // Remove  IgnorePayment\r\n            if (unsupport_param.constructor === Array){\r\n                unsupport_param.forEach(function (pa) {\r\n                   delete params[pa];\r\n                });\r\n            } else {\r\n                throw new Error(`argument unsupport_param must be an Array.`);\r\n            }\r\n            // User doesn't have to specify ChoosePayment\r\n            params['ChoosePayment'] = pay_method;\r\n            // Process PlatformID & MerchantID by contractor setting\r\n            if (this.helper.is_contractor()){\r\n                params['PlatformID'] = this.helper.get_mercid();\r\n                if (params['MerchantID'] === null){\r\n                    throw new Error(`[MerchantID] should be specified when you're contractor-Platform.`);\r\n                }\r\n            } else {\r\n                params['PlatformID'] = '';\r\n                params['MerchantID'] = this.helper.get_mercid();\r\n            }\r\n            // InvoiceMark based on keyword argument: invoice\r\n            if (inv.constructor === Object && Object.keys(inv).length === 0){\r\n                params['InvoiceMark'] = 'N';\r\n            } else {\r\n                params['InvoiceMark'] = 'Y';\r\n                this.verify_aiochkout.verify_aio_inv_param(inv);\r\n                // this.verify_aiochkout.AioCheckOutParamVerify().verify_aio_inv_param(inv);\r\n                // merge param & inv param\r\n                Object.assign(params, inv);\r\n            }\r\n        } else {\r\n            throw new ECpayError.ECpayInvalidParam(`Received parameter object must be a Object.`);\r\n        }\r\n    }\r\n\r\n    _aiochkout_pos_proc(params){\r\n        this.verify_aiochkout.verify_aio_payment_param(params);\r\n        // encode special param\r\n        let sp_param = this.verify_aiochkout.get_special_encode_param('AioCheckOut');\r\n        this.helper.encode_special_param(params, sp_param);\r\n\r\n        // Insert chkmacval\r\n        // console.log(params);\r\n        let chkmac = this.helper.gen_chk_mac_value(params);\r\n        params['CheckMacValue'] = chkmac;\r\n        // gen post html\r\n        let api_url = this.verify_aiochkout.get_svc_url('AioCheckOut', this.helper.get_op_mode());\r\n        let htm = this.helper.gen_html_post_form(api_url, '_form_aiochk', params);\r\n        //return post htm\r\n        return htm;\r\n    }\r\n}\r\nmodule.exports = ECpayPaymentClient;"]},"metadata":{},"sourceType":"script"}