{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Formik, Form } from \"formik\";\nimport logo from \"../assets/logo.png\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  console.log(username);\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n\n  handleChange = ({\n    currentTarget: input\n  }) => {\n    const errors = { ...this.state.errors\n    };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n    const data = { ...this.state.data\n    };\n    data[input.name] = input.value;\n    this.setState({\n      data,\n      errors\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: fields => {\n      alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u540D\\u7A31\",\n    name: \"username\",\n    errors: errors.username,\n    touched: touched.username,\n    value: username,\n    onChange: e => setUsername(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u4FE1\\u7BB1\",\n    name: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    value: username,\n    onChange: e => setEmail(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    value: username,\n    onChange: e => setEmail(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u78BA\\u8A8D\\u5BC6\\u78BC\",\n    name: \"confirmPassword\",\n    errors: errors.confirmPassword,\n    touched: touched.confirmPassword,\n    value: username,\n    onChange: e => setEmail(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"\\u78BA\\u8A8D\\u9001\\u51FA\")))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","CustomField","Formik","Form","logo","Yup","RegisterForm","email","setEmail","password","setPassword","username","setUsername","console","log","validationSchema","object","shape","string","required","min","confirmPassword","oneOf","ref","initialValues","handleChange","currentTarget","input","errors","state","errorMessage","validateProperty","name","data","value","setState","fields","alert","JSON","stringify","touched","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Formik, Form } from \"formik\";\nimport logo from \"../assets/logo.png\";\n\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  console.log(username);\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  return (\n    <div id=\"form\">\n      <h1 id=\"formTitle\">會員註冊</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(fields) => {\n          alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <CustomField\n              label=\"名稱\"\n              name=\"username\"\n              errors={errors.username}\n              touched={touched.username}\n              value={username}\n              onChange={(e) => setUsername(e.currentTarget.value)}\n            />\n            <CustomField\n              label=\"信箱\"\n              name=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n              value={username}\n              onChange={(e) => setEmail(e.currentTarget.value)}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n              value={username}\n              onChange={(e) => setEmail(e.currentTarget.value)}\n            />\n            <CustomField\n              label=\"確認密碼\"\n              name=\"confirmPassword\"\n              errors={errors.confirmPassword}\n              touched={touched.confirmPassword}\n              value={username}\n              onChange={(e) => setEmail(e.currentTarget.value)}\n            />\n\n            <div className=\"form-group mt-2\">\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                確認送出\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}