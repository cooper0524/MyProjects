{"ast":null,"code":"/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\nvar sprintf = require('./sprintf').sprintf;\n\nvar utils = require('./utils');\n\nvar ElementPath = require('./elementpath');\n\nvar TreeBuilder = require('./treebuilder').TreeBuilder;\n\nvar get_parser = require('./parser').get_parser;\n\nvar constants = require('./constants');\n\nvar element_ids = 0;\n\nfunction Element(tag, attrib) {\n  this._id = element_ids++;\n  this.tag = tag;\n  this.attrib = {};\n  this.text = null;\n  this.tail = null;\n  this._children = [];\n\n  if (attrib) {\n    this.attrib = utils.merge(this.attrib, attrib);\n  }\n}\n\nElement.prototype.toString = function () {\n  return sprintf(\"<Element %s at %s>\", this.tag, this._id);\n};\n\nElement.prototype.makeelement = function (tag, attrib) {\n  return new Element(tag, attrib);\n};\n\nElement.prototype.len = function () {\n  return this._children.length;\n};\n\nElement.prototype.getItem = function (index) {\n  return this._children[index];\n};\n\nElement.prototype.setItem = function (index, element) {\n  this._children[index] = element;\n};\n\nElement.prototype.delItem = function (index) {\n  this._children.splice(index, 1);\n};\n\nElement.prototype.getSlice = function (start, stop) {\n  return this._children.slice(start, stop);\n};\n\nElement.prototype.setSlice = function (start, stop, elements) {\n  var i;\n  var k = 0;\n\n  for (i = start; i < stop; i++, k++) {\n    this._children[i] = elements[k];\n  }\n};\n\nElement.prototype.delSlice = function (start, stop) {\n  this._children.splice(start, stop - start);\n};\n\nElement.prototype.append = function (element) {\n  this._children.push(element);\n};\n\nElement.prototype.extend = function (elements) {\n  this._children.concat(elements);\n};\n\nElement.prototype.insert = function (index, element) {\n  this._children[index] = element;\n};\n\nElement.prototype.remove = function (element) {\n  this._children = this._children.filter(function (e) {\n    /* TODO: is this the right way to do this? */\n    if (e._id === element._id) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nElement.prototype.getchildren = function () {\n  return this._children;\n};\n\nElement.prototype.find = function (path) {\n  return ElementPath.find(this, path);\n};\n\nElement.prototype.findtext = function (path, defvalue) {\n  return ElementPath.findtext(this, path, defvalue);\n};\n\nElement.prototype.findall = function (path, defvalue) {\n  return ElementPath.findall(this, path, defvalue);\n};\n\nElement.prototype.clear = function () {\n  this.attrib = {};\n  this._children = [];\n  this.text = null;\n  this.tail = null;\n};\n\nElement.prototype.get = function (key, defvalue) {\n  if (this.attrib[key] !== undefined) {\n    return this.attrib[key];\n  } else {\n    return defvalue;\n  }\n};\n\nElement.prototype.set = function (key, value) {\n  this.attrib[key] = value;\n};\n\nElement.prototype.keys = function () {\n  return Object.keys(this.attrib);\n};\n\nElement.prototype.items = function () {\n  return utils.items(this.attrib);\n};\n/*\n * In python this uses a generator, but in v8 we don't have em,\n * so we use a callback instead.\n **/\n\n\nElement.prototype.iter = function (tag, callback) {\n  var self = this;\n  var i, child;\n\n  if (tag === \"*\") {\n    tag = null;\n  }\n\n  if (tag === null || this.tag === tag) {\n    callback(self);\n  }\n\n  for (i = 0; i < this._children.length; i++) {\n    child = this._children[i];\n    child.iter(tag, function (e) {\n      callback(e);\n    });\n  }\n};\n\nElement.prototype.itertext = function (callback) {\n  this.iter(null, function (e) {\n    if (e.text) {\n      callback(e.text);\n    }\n\n    if (e.tail) {\n      callback(e.tail);\n    }\n  });\n};\n\nfunction SubElement(parent, tag, attrib) {\n  var element = parent.makeelement(tag, attrib);\n  parent.append(element);\n  return element;\n}\n\nfunction Comment(text) {\n  var element = new Element(Comment);\n\n  if (text) {\n    element.text = text;\n  }\n\n  return element;\n}\n\nfunction CData(text) {\n  var element = new Element(CData);\n\n  if (text) {\n    element.text = text;\n  }\n\n  return element;\n}\n\nfunction ProcessingInstruction(target, text) {\n  var element = new Element(ProcessingInstruction);\n  element.text = target;\n\n  if (text) {\n    element.text = element.text + \" \" + text;\n  }\n\n  return element;\n}\n\nfunction QName(text_or_uri, tag) {\n  if (tag) {\n    text_or_uri = sprintf(\"{%s}%s\", text_or_uri, tag);\n  }\n\n  this.text = text_or_uri;\n}\n\nQName.prototype.toString = function () {\n  return this.text;\n};\n\nfunction ElementTree(element) {\n  this._root = element;\n}\n\nElementTree.prototype.getroot = function () {\n  return this._root;\n};\n\nElementTree.prototype._setroot = function (element) {\n  this._root = element;\n};\n\nElementTree.prototype.parse = function (source, parser) {\n  if (!parser) {\n    parser = get_parser(constants.DEFAULT_PARSER);\n    parser = new parser.XMLParser(new TreeBuilder());\n  }\n\n  parser.feed(source);\n  this._root = parser.close();\n  return this._root;\n};\n\nElementTree.prototype.iter = function (tag, callback) {\n  this._root.iter(tag, callback);\n};\n\nElementTree.prototype.find = function (path) {\n  return this._root.find(path);\n};\n\nElementTree.prototype.findtext = function (path, defvalue) {\n  return this._root.findtext(path, defvalue);\n};\n\nElementTree.prototype.findall = function (path) {\n  return this._root.findall(path);\n};\n/**\n * Unlike ElementTree, we don't write to a file, we return you a string.\n */\n\n\nElementTree.prototype.write = function (options) {\n  var sb = [];\n  options = utils.merge({\n    encoding: 'utf-8',\n    xml_declaration: null,\n    default_namespace: null,\n    method: 'xml'\n  }, options);\n\n  if (options.xml_declaration !== false) {\n    sb.push(\"<?xml version='1.0' encoding='\" + options.encoding + \"'?>\\n\");\n  }\n\n  if (options.method === \"text\") {\n    _serialize_text(sb, self._root, encoding);\n  } else {\n    var qnames, namespaces, indent, indent_string;\n\n    var x = _namespaces(this._root, options.encoding, options.default_namespace);\n\n    qnames = x[0];\n    namespaces = x[1];\n\n    if (options.hasOwnProperty('indent')) {\n      indent = 0;\n      indent_string = new Array(options.indent + 1).join(' ');\n    } else {\n      indent = false;\n    }\n\n    if (options.method === \"xml\") {\n      _serialize_xml(function (data) {\n        sb.push(data);\n      }, this._root, options.encoding, qnames, namespaces, indent, indent_string);\n    } else {\n      /* TODO: html */\n      throw new Error(\"unknown serialization method \" + options.method);\n    }\n  }\n\n  return sb.join(\"\");\n};\n\nvar _namespace_map = {\n  /* \"well-known\" namespace prefixes */\n  \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n  \"http://www.w3.org/1999/xhtml\": \"html\",\n  \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n  \"http://schemas.xmlsoap.org/wsdl/\": \"wsdl\",\n\n  /* xml schema */\n  \"http://www.w3.org/2001/XMLSchema\": \"xs\",\n  \"http://www.w3.org/2001/XMLSchema-instance\": \"xsi\",\n\n  /* dublic core */\n  \"http://purl.org/dc/elements/1.1/\": \"dc\"\n};\n\nfunction register_namespace(prefix, uri) {\n  if (/ns\\d+$/.test(prefix)) {\n    throw new Error('Prefix format reserved for internal use');\n  }\n\n  if (_namespace_map.hasOwnProperty(uri) && _namespace_map[uri] === prefix) {\n    delete _namespace_map[uri];\n  }\n\n  _namespace_map[uri] = prefix;\n}\n\nfunction _escape(text, encoding, isAttribute, isText) {\n  if (text) {\n    text = text.toString();\n    text = text.replace(/&/g, '&amp;');\n    text = text.replace(/</g, '&lt;');\n    text = text.replace(/>/g, '&gt;');\n\n    if (!isText) {\n      text = text.replace(/\\n/g, '&#xA;');\n      text = text.replace(/\\r/g, '&#xD;');\n    }\n\n    if (isAttribute) {\n      text = text.replace(/\"/g, '&quot;');\n    }\n  }\n\n  return text;\n}\n/* TODO: benchmark single regex */\n\n\nfunction _escape_attrib(text, encoding) {\n  return _escape(text, encoding, true);\n}\n\nfunction _escape_cdata(text, encoding) {\n  return _escape(text, encoding, false);\n}\n\nfunction _escape_text(text, encoding) {\n  return _escape(text, encoding, false, true);\n}\n\nfunction _namespaces(elem, encoding, default_namespace) {\n  var qnames = {};\n  var namespaces = {};\n\n  if (default_namespace) {\n    namespaces[default_namespace] = \"\";\n  }\n\n  function encode(text) {\n    return text;\n  }\n\n  function add_qname(qname) {\n    if (qname[0] === \"{\") {\n      var tmp = qname.substring(1).split(\"}\", 2);\n      var uri = tmp[0];\n      var tag = tmp[1];\n      var prefix = namespaces[uri];\n\n      if (prefix === undefined) {\n        prefix = _namespace_map[uri];\n\n        if (prefix === undefined) {\n          prefix = \"ns\" + Object.keys(namespaces).length;\n        }\n\n        if (prefix !== \"xml\") {\n          namespaces[uri] = prefix;\n        }\n      }\n\n      if (prefix) {\n        qnames[qname] = sprintf(\"%s:%s\", prefix, tag);\n      } else {\n        qnames[qname] = tag;\n      }\n    } else {\n      if (default_namespace) {\n        throw new Error('cannot use non-qualified names with default_namespace option');\n      }\n\n      qnames[qname] = qname;\n    }\n  }\n\n  elem.iter(null, function (e) {\n    var i;\n    var tag = e.tag;\n    var text = e.text;\n    var items = e.items();\n\n    if (tag instanceof QName && qnames[tag.text] === undefined) {\n      add_qname(tag.text);\n    } else if (typeof tag === \"string\") {\n      add_qname(tag);\n    } else if (tag !== null && tag !== Comment && tag !== CData && tag !== ProcessingInstruction) {\n      throw new Error('Invalid tag type for serialization: ' + tag);\n    }\n\n    if (text instanceof QName && qnames[text.text] === undefined) {\n      add_qname(text.text);\n    }\n\n    items.forEach(function (item) {\n      var key = item[0],\n          value = item[1];\n\n      if (key instanceof QName) {\n        key = key.text;\n      }\n\n      if (qnames[key] === undefined) {\n        add_qname(key);\n      }\n\n      if (value instanceof QName && qnames[value.text] === undefined) {\n        add_qname(value.text);\n      }\n    });\n  });\n  return [qnames, namespaces];\n}\n\nfunction _serialize_xml(write, elem, encoding, qnames, namespaces, indent, indent_string) {\n  var tag = elem.tag;\n  var text = elem.text;\n  var items;\n  var i;\n  var newlines = indent || indent === 0;\n  write(Array(indent + 1).join(indent_string));\n\n  if (tag === Comment) {\n    write(sprintf(\"<!--%s-->\", _escape_cdata(text, encoding)));\n  } else if (tag === ProcessingInstruction) {\n    write(sprintf(\"<?%s?>\", _escape_cdata(text, encoding)));\n  } else if (tag === CData) {\n    text = text || '';\n    write(sprintf(\"<![CDATA[%s]]>\", text));\n  } else {\n    tag = qnames[tag];\n\n    if (tag === undefined) {\n      if (text) {\n        write(_escape_text(text, encoding));\n      }\n\n      elem.iter(function (e) {\n        _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n      });\n    } else {\n      write(\"<\" + tag);\n      items = elem.items();\n\n      if (items || namespaces) {\n        items.sort(); // lexical order\n\n        items.forEach(function (item) {\n          var k = item[0],\n              v = item[1];\n\n          if (k instanceof QName) {\n            k = k.text;\n          }\n\n          if (v instanceof QName) {\n            v = qnames[v.text];\n          } else {\n            v = _escape_attrib(v, encoding);\n          }\n\n          write(sprintf(\" %s=\\\"%s\\\"\", qnames[k], v));\n        });\n\n        if (namespaces) {\n          items = utils.items(namespaces);\n          items.sort(function (a, b) {\n            return a[1] < b[1];\n          });\n          items.forEach(function (item) {\n            var k = item[1],\n                v = item[0];\n\n            if (k) {\n              k = ':' + k;\n            }\n\n            write(sprintf(\" xmlns%s=\\\"%s\\\"\", k, _escape_attrib(v, encoding)));\n          });\n        }\n      }\n\n      if (text || elem.len()) {\n        if (text && text.toString().match(/^\\s*$/)) {\n          text = null;\n        }\n\n        write(\">\");\n\n        if (!text && newlines) {\n          write(\"\\n\");\n        }\n\n        if (text) {\n          write(_escape_text(text, encoding));\n        }\n\n        elem._children.forEach(function (e) {\n          _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n        });\n\n        if (!text && indent) {\n          write(Array(indent + 1).join(indent_string));\n        }\n\n        write(\"</\" + tag + \">\");\n      } else {\n        write(\" />\");\n      }\n    }\n  }\n\n  if (newlines) {\n    write(\"\\n\");\n  }\n}\n\nfunction parse(source, parser) {\n  var tree = new ElementTree();\n  tree.parse(source, parser);\n  return tree;\n}\n\nfunction tostring(element, options) {\n  return new ElementTree(element).write(options);\n}\n\nexports.PI = ProcessingInstruction;\nexports.Comment = Comment;\nexports.CData = CData;\nexports.ProcessingInstruction = ProcessingInstruction;\nexports.SubElement = SubElement;\nexports.QName = QName;\nexports.ElementTree = ElementTree;\nexports.ElementPath = ElementPath;\n\nexports.Element = function (tag, attrib) {\n  return new Element(tag, attrib);\n};\n\nexports.XML = function (data) {\n  var et = new ElementTree();\n  return et.parse(data);\n};\n\nexports.parse = parse;\nexports.register_namespace = register_namespace;\nexports.tostring = tostring;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/node_modules/elementtree/lib/elementtree.js"],"names":["sprintf","require","utils","ElementPath","TreeBuilder","get_parser","constants","element_ids","Element","tag","attrib","_id","text","tail","_children","merge","prototype","toString","makeelement","len","length","getItem","index","setItem","element","delItem","splice","getSlice","start","stop","slice","setSlice","elements","i","k","delSlice","append","push","extend","concat","insert","remove","filter","e","getchildren","find","path","findtext","defvalue","findall","clear","get","key","undefined","set","value","keys","Object","items","iter","callback","self","child","itertext","SubElement","parent","Comment","CData","ProcessingInstruction","target","QName","text_or_uri","ElementTree","_root","getroot","_setroot","parse","source","parser","DEFAULT_PARSER","XMLParser","feed","close","write","options","sb","encoding","xml_declaration","default_namespace","method","_serialize_text","qnames","namespaces","indent","indent_string","x","_namespaces","hasOwnProperty","Array","join","_serialize_xml","data","Error","_namespace_map","register_namespace","prefix","uri","test","_escape","isAttribute","isText","replace","_escape_attrib","_escape_cdata","_escape_text","elem","encode","add_qname","qname","tmp","substring","split","forEach","item","newlines","sort","v","a","b","match","tree","tostring","exports","PI","XML","et"],"mappings":"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","sourcesContent":["/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar sprintf = require('./sprintf').sprintf;\n\nvar utils = require('./utils');\nvar ElementPath = require('./elementpath');\nvar TreeBuilder = require('./treebuilder').TreeBuilder;\nvar get_parser = require('./parser').get_parser;\nvar constants = require('./constants');\n\nvar element_ids = 0;\n\nfunction Element(tag, attrib)\n{\n  this._id = element_ids++;\n  this.tag = tag;\n  this.attrib = {};\n  this.text = null;\n  this.tail = null;\n  this._children = [];\n\n  if (attrib) {\n    this.attrib = utils.merge(this.attrib, attrib);\n  }\n}\n\nElement.prototype.toString = function()\n{\n  return sprintf(\"<Element %s at %s>\", this.tag, this._id);\n};\n\nElement.prototype.makeelement = function(tag, attrib)\n{\n  return new Element(tag, attrib);\n};\n\nElement.prototype.len = function()\n{\n  return this._children.length;\n};\n\nElement.prototype.getItem = function(index)\n{\n  return this._children[index];\n};\n\nElement.prototype.setItem = function(index, element)\n{\n  this._children[index] = element;\n};\n\nElement.prototype.delItem = function(index)\n{\n  this._children.splice(index, 1);\n};\n\nElement.prototype.getSlice = function(start, stop)\n{\n  return this._children.slice(start, stop);\n};\n\nElement.prototype.setSlice = function(start, stop, elements)\n{\n  var i;\n  var k = 0;\n  for (i = start; i < stop; i++, k++) {\n    this._children[i] = elements[k];\n  }\n};\n\nElement.prototype.delSlice = function(start, stop)\n{\n  this._children.splice(start, stop - start);\n};\n\nElement.prototype.append = function(element)\n{\n  this._children.push(element);\n};\n\nElement.prototype.extend = function(elements)\n{\n  this._children.concat(elements);\n};\n\nElement.prototype.insert = function(index, element)\n{\n  this._children[index] = element;\n};\n\nElement.prototype.remove = function(element)\n{\n  this._children = this._children.filter(function(e) {\n    /* TODO: is this the right way to do this? */\n    if (e._id === element._id) {\n      return false;\n    }\n    return true;\n  });\n};\n\nElement.prototype.getchildren = function() {\n  return this._children;\n};\n\nElement.prototype.find = function(path)\n{\n  return ElementPath.find(this, path);\n};\n\nElement.prototype.findtext = function(path, defvalue)\n{\n  return ElementPath.findtext(this, path, defvalue);\n};\n\nElement.prototype.findall = function(path, defvalue)\n{\n  return ElementPath.findall(this, path, defvalue);\n};\n\nElement.prototype.clear = function()\n{\n  this.attrib = {};\n  this._children = [];\n  this.text = null;\n  this.tail = null;\n};\n\nElement.prototype.get = function(key, defvalue)\n{\n  if (this.attrib[key] !== undefined) {\n    return this.attrib[key];\n  }\n  else {\n    return defvalue;\n  }\n};\n\nElement.prototype.set = function(key, value)\n{\n  this.attrib[key] = value;\n};\n\nElement.prototype.keys = function()\n{\n  return Object.keys(this.attrib);\n};\n\nElement.prototype.items = function()\n{\n  return utils.items(this.attrib);\n};\n\n/*\n * In python this uses a generator, but in v8 we don't have em,\n * so we use a callback instead.\n **/\nElement.prototype.iter = function(tag, callback)\n{\n  var self = this;\n  var i, child;\n\n  if (tag === \"*\") {\n    tag = null;\n  }\n\n  if (tag === null || this.tag === tag) {\n    callback(self);\n  }\n\n  for (i = 0; i < this._children.length; i++) {\n    child = this._children[i];\n    child.iter(tag, function(e) {\n      callback(e);\n    });\n  }\n};\n\nElement.prototype.itertext = function(callback)\n{\n  this.iter(null, function(e) {\n    if (e.text) {\n      callback(e.text);\n    }\n\n    if (e.tail) {\n      callback(e.tail);\n    }\n  });\n};\n\n\nfunction SubElement(parent, tag, attrib) {\n  var element = parent.makeelement(tag, attrib);\n  parent.append(element);\n  return element;\n}\n\nfunction Comment(text) {\n  var element = new Element(Comment);\n  if (text) {\n    element.text = text;\n  }\n  return element;\n}\n\nfunction CData(text) {\n  var element = new Element(CData);\n  if (text) {\n    element.text = text;\n  }\n  return element;\n}\n\nfunction ProcessingInstruction(target, text)\n{\n  var element = new Element(ProcessingInstruction);\n  element.text = target;\n  if (text) {\n    element.text = element.text + \" \" + text;\n  }\n  return element;\n}\n\nfunction QName(text_or_uri, tag)\n{\n  if (tag) {\n    text_or_uri = sprintf(\"{%s}%s\", text_or_uri, tag);\n  }\n  this.text = text_or_uri;\n}\n\nQName.prototype.toString = function() {\n  return this.text;\n};\n\nfunction ElementTree(element)\n{\n  this._root = element;\n}\n\nElementTree.prototype.getroot = function() {\n  return this._root;\n};\n\nElementTree.prototype._setroot = function(element) {\n  this._root = element;\n};\n\nElementTree.prototype.parse = function(source, parser) {\n  if (!parser) {\n    parser = get_parser(constants.DEFAULT_PARSER);\n    parser = new parser.XMLParser(new TreeBuilder());\n  }\n\n  parser.feed(source);\n  this._root = parser.close();\n  return this._root;\n};\n\nElementTree.prototype.iter = function(tag, callback) {\n  this._root.iter(tag, callback);\n};\n\nElementTree.prototype.find = function(path) {\n  return this._root.find(path);\n};\n\nElementTree.prototype.findtext = function(path, defvalue) {\n  return this._root.findtext(path, defvalue);\n};\n\nElementTree.prototype.findall = function(path) {\n  return this._root.findall(path);\n};\n\n/**\n * Unlike ElementTree, we don't write to a file, we return you a string.\n */\nElementTree.prototype.write = function(options) {\n  var sb = [];\n  options = utils.merge({\n    encoding: 'utf-8',\n    xml_declaration: null,\n    default_namespace: null,\n    method: 'xml'}, options);\n\n  if (options.xml_declaration !== false) {\n    sb.push(\"<?xml version='1.0' encoding='\"+options.encoding +\"'?>\\n\");\n  }\n\n  if (options.method === \"text\") {\n    _serialize_text(sb, self._root, encoding);\n  }\n  else {\n    var qnames, namespaces, indent, indent_string;\n    var x = _namespaces(this._root, options.encoding, options.default_namespace);\n    qnames = x[0];\n    namespaces = x[1];\n\n    if (options.hasOwnProperty('indent')) {\n      indent = 0;\n      indent_string = new Array(options.indent + 1).join(' ');\n    }\n    else {\n      indent = false;\n    }\n\n    if (options.method === \"xml\") {\n      _serialize_xml(function(data) {\n        sb.push(data);\n      }, this._root, options.encoding, qnames, namespaces, indent, indent_string);\n    }\n    else {\n      /* TODO: html */\n      throw new Error(\"unknown serialization method \"+ options.method);\n    }\n  }\n\n  return sb.join(\"\");\n};\n\nvar _namespace_map = {\n    /* \"well-known\" namespace prefixes */\n    \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n    \"http://www.w3.org/1999/xhtml\": \"html\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n    \"http://schemas.xmlsoap.org/wsdl/\": \"wsdl\",\n    /* xml schema */\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\",\n    \"http://www.w3.org/2001/XMLSchema-instance\": \"xsi\",\n    /* dublic core */\n    \"http://purl.org/dc/elements/1.1/\": \"dc\",\n};\n\nfunction register_namespace(prefix, uri) {\n  if (/ns\\d+$/.test(prefix)) {\n    throw new Error('Prefix format reserved for internal use');\n  }\n\n  if (_namespace_map.hasOwnProperty(uri) && _namespace_map[uri] === prefix) {\n    delete _namespace_map[uri];\n  }\n\n  _namespace_map[uri] = prefix;\n}\n\n\nfunction _escape(text, encoding, isAttribute, isText) {\n  if (text) {\n    text = text.toString();\n    text = text.replace(/&/g, '&amp;');\n    text = text.replace(/</g, '&lt;');\n    text = text.replace(/>/g, '&gt;');\n    if (!isText) {\n        text = text.replace(/\\n/g, '&#xA;');\n        text = text.replace(/\\r/g, '&#xD;');\n    }\n    if (isAttribute) {\n      text = text.replace(/\"/g, '&quot;');\n    }\n  }\n  return text;\n}\n\n/* TODO: benchmark single regex */\nfunction _escape_attrib(text, encoding) {\n  return _escape(text, encoding, true);\n}\n\nfunction _escape_cdata(text, encoding) {\n  return _escape(text, encoding, false);\n}\n\nfunction _escape_text(text, encoding) {\n  return _escape(text, encoding, false, true);\n}\n\nfunction _namespaces(elem, encoding, default_namespace) {\n  var qnames = {};\n  var namespaces = {};\n\n  if (default_namespace) {\n    namespaces[default_namespace] = \"\";\n  }\n\n  function encode(text) {\n    return text;\n  }\n\n  function add_qname(qname) {\n    if (qname[0] === \"{\") {\n      var tmp = qname.substring(1).split(\"}\", 2);\n      var uri = tmp[0];\n      var tag = tmp[1];\n      var prefix = namespaces[uri];\n\n      if (prefix === undefined) {\n        prefix = _namespace_map[uri];\n        if (prefix === undefined) {\n          prefix = \"ns\" + Object.keys(namespaces).length;\n        }\n        if (prefix !== \"xml\") {\n          namespaces[uri] = prefix;\n        }\n      }\n\n      if (prefix) {\n        qnames[qname] = sprintf(\"%s:%s\", prefix, tag);\n      }\n      else {\n        qnames[qname] = tag;\n      }\n    }\n    else {\n      if (default_namespace) {\n        throw new Error('cannot use non-qualified names with default_namespace option');\n      }\n\n      qnames[qname] = qname;\n    }\n  }\n\n\n  elem.iter(null, function(e) {\n    var i;\n    var tag = e.tag;\n    var text = e.text;\n    var items = e.items();\n\n    if (tag instanceof QName && qnames[tag.text] === undefined) {\n      add_qname(tag.text);\n    }\n    else if (typeof(tag) === \"string\") {\n      add_qname(tag);\n    }\n    else if (tag !== null && tag !== Comment && tag !== CData && tag !== ProcessingInstruction) {\n      throw new Error('Invalid tag type for serialization: '+ tag);\n    }\n\n    if (text instanceof QName && qnames[text.text] === undefined) {\n      add_qname(text.text);\n    }\n\n    items.forEach(function(item) {\n      var key = item[0],\n          value = item[1];\n      if (key instanceof QName) {\n        key = key.text;\n      }\n\n      if (qnames[key] === undefined) {\n        add_qname(key);\n      }\n\n      if (value instanceof QName && qnames[value.text] === undefined) {\n        add_qname(value.text);\n      }\n    });\n  });\n  return [qnames, namespaces];\n}\n\nfunction _serialize_xml(write, elem, encoding, qnames, namespaces, indent, indent_string) {\n  var tag = elem.tag;\n  var text = elem.text;\n  var items;\n  var i;\n\n  var newlines = indent || (indent === 0);\n  write(Array(indent + 1).join(indent_string));\n\n  if (tag === Comment) {\n    write(sprintf(\"<!--%s-->\", _escape_cdata(text, encoding)));\n  }\n  else if (tag === ProcessingInstruction) {\n    write(sprintf(\"<?%s?>\", _escape_cdata(text, encoding)));\n  }\n  else if (tag === CData) {\n    text = text || '';\n    write(sprintf(\"<![CDATA[%s]]>\", text));\n  }\n  else {\n    tag = qnames[tag];\n    if (tag === undefined) {\n      if (text) {\n        write(_escape_text(text, encoding));\n      }\n      elem.iter(function(e) {\n        _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n      });\n    }\n    else {\n      write(\"<\" + tag);\n      items = elem.items();\n\n      if (items || namespaces) {\n        items.sort(); // lexical order\n\n        items.forEach(function(item) {\n          var k = item[0],\n              v = item[1];\n\n            if (k instanceof QName) {\n              k = k.text;\n            }\n\n            if (v instanceof QName) {\n              v = qnames[v.text];\n            }\n            else {\n              v = _escape_attrib(v, encoding);\n            }\n            write(sprintf(\" %s=\\\"%s\\\"\", qnames[k], v));\n        });\n\n        if (namespaces) {\n          items = utils.items(namespaces);\n          items.sort(function(a, b) { return a[1] < b[1]; });\n\n          items.forEach(function(item) {\n            var k = item[1],\n                v = item[0];\n\n            if (k) {\n              k = ':' + k;\n            }\n\n            write(sprintf(\" xmlns%s=\\\"%s\\\"\", k, _escape_attrib(v, encoding)));\n          });\n        }\n      }\n\n      if (text || elem.len()) {\n        if (text && text.toString().match(/^\\s*$/)) {\n            text = null;\n        }\n\n        write(\">\");\n        if (!text && newlines) {\n          write(\"\\n\");\n        }\n\n        if (text) {\n          write(_escape_text(text, encoding));\n        }\n        elem._children.forEach(function(e) {\n          _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n        });\n\n        if (!text && indent) {\n          write(Array(indent + 1).join(indent_string));\n        }\n        write(\"</\" + tag + \">\");\n      }\n      else {\n        write(\" />\");\n      }\n    }\n  }\n\n  if (newlines) {\n    write(\"\\n\");\n  }\n}\n\nfunction parse(source, parser) {\n  var tree = new ElementTree();\n  tree.parse(source, parser);\n  return tree;\n}\n\nfunction tostring(element, options) {\n  return new ElementTree(element).write(options);\n}\n\nexports.PI = ProcessingInstruction;\nexports.Comment = Comment;\nexports.CData = CData;\nexports.ProcessingInstruction = ProcessingInstruction;\nexports.SubElement = SubElement;\nexports.QName = QName;\nexports.ElementTree = ElementTree;\nexports.ElementPath = ElementPath;\nexports.Element = function(tag, attrib) {\n  return new Element(tag, attrib);\n};\n\nexports.XML = function(data) {\n  var et = new ElementTree();\n  return et.parse(data);\n};\n\nexports.parse = parse;\nexports.register_namespace = register_namespace;\nexports.tostring = tostring;\n"]},"metadata":{},"sourceType":"script"}