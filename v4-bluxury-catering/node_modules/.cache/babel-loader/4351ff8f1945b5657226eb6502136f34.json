{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/src/components/LoginForm.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport { auth } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    authUser\n  } = useContext(UserContext);\n\n  function handleSignIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // [START_EXCLUDE]\n\n      if (errorCode === \"auth/wrong-password\") {\n        alert(\"Wrong password.\");\n      } else {\n        console.log(errorMessage);\n      }\n    });\n  }\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth.sendPasswordResetEmail(email).then(() => {\n      setEmailHasBeenSent(true);\n      setTimeout(() => {\n        setEmailHasBeenSent(false);\n      }, 3000);\n    }).catch(() => {\n      setError(\"Error resetting password\");\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const initialValues = {\n    email: email,\n    password: password\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, authUser && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u767B\\u5165\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => console.log(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u90F5\\u4EF6\",\n    name: \"email\",\n    type: \"email\",\n    errors: errors.email,\n    touched: touched.email,\n    onKeyUp: e => {\n      setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomField, {\n    label: \"\\u5BC6\\u78BC\",\n    name: \"password\",\n    type: \"password\",\n    errors: errors.password,\n    touched: touched.password,\n    onKeyUp: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-4 d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-primary m-auto\",\n    onClick: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"\\u767B\\u5165\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"m-auto\",\n    to: \"/\\u8A3B\\u518A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\u8A3B\\u518A\"))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 3/src/components/LoginForm.jsx"],"names":["React","useState","useContext","CustomField","Redirect","Link","Formik","Form","auth","Yup","UserContext","LoginForm","email","setEmail","password","setPassword","authUser","handleSignIn","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","console","log","sendResetEmail","event","preventDefault","sendPasswordResetEmail","then","setEmailHasBeenSent","setTimeout","setError","validationSchema","object","shape","username","string","required","min","confirmPassword","oneOf","ref","initialValues","values","errors","touched","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport CustomField from \"../common/CustomField\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport { auth } from \"../services/firebase\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"../contexts/UserContext\";\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { authUser } = useContext(UserContext);\n\n  function handleSignIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // [START_EXCLUDE]\n      if (errorCode === \"auth/wrong-password\") {\n        alert(\"Wrong password.\");\n      } else {\n        console.log(errorMessage);\n      }\n    });\n  }\n\n  const sendResetEmail = (event) => {\n    event.preventDefault();\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setEmailHasBeenSent(true);\n        setTimeout(() => {\n          setEmailHasBeenSent(false);\n        }, 3000);\n      })\n      .catch(() => {\n        setError(\"Error resetting password\");\n      });\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"First Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n  });\n\n  const initialValues = {\n    email: email,\n    password: password,\n  };\n\n  return (\n    <div id=\"form\">\n      {authUser && <Redirect to=\"/\" />}\n      <h1 id=\"formTitle\">會員登入</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values) => console.log(values)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <CustomField\n              label=\"郵件\"\n              name=\"email\"\n              type=\"email\"\n              errors={errors.email}\n              touched={touched.email}\n              onKeyUp={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <CustomField\n              label=\"密碼\"\n              name=\"password\"\n              type=\"password\"\n              errors={errors.password}\n              touched={touched.password}\n              onKeyUp={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n            <div className=\"form-group mt-4 d-flex justify-content-center\">\n              <button\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn btn-primary m-auto\"\n                onClick={handleSignIn}\n              >\n                登入\n              </button>\n\n              <button className=\"btn btn-primary \">註冊</button>\n\n              <Link className=\"m-auto\" to=\"/註冊\">\n                <button className=\"btn btn-primary \">註冊</button>\n              </Link>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}