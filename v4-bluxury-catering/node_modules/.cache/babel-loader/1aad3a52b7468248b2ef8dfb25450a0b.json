{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/contexts/CartContext.jsx\";\nimport React, { createContext, useReducer } from \"react\";\nimport { CartReducer, sumItems } from \"./CartReducer\";\nimport firebase, { auth } from \"../services/firebase\";\nexport const CartContext = createContext();\nconst storage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst initialState = {\n  cartItems: storage,\n  ...sumItems(storage),\n  checkout: false\n};\n\nconst CartContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  const increase = payload => {\n    dispatch({\n      type: \"INCREASE\",\n      payload\n    });\n  };\n\n  const decrease = payload => {\n    dispatch({\n      type: \"DECREASE\",\n      payload\n    });\n  };\n\n  const addProduct = payload => {\n    dispatch({\n      type: \"ADD_ITEM\",\n      payload\n    });\n  };\n\n  const removeProduct = payload => {\n    dispatch({\n      type: \"REMOVE_ITEM\",\n      payload\n    });\n  };\n\n  const clearCart = () => {\n    dispatch({\n      type: \"CLEAR\"\n    });\n  };\n\n  const handleCheckout = () => {\n    console.log(\"CHECKOUT\", state);\n    dispatch({\n      type: \"CHECKOUT\"\n    });\n    const consumer = \"\";\n\n    if (auth.currentUser) {\n      consumer = auth.currentUser.uid;\n    }\n\n    const purchaseDate = firebase.firestore.Timestamp.fromDate(new Date()).toDate();\n    firebase.firestore().collection(\"consumption\").doc(purchaseDate.toString()).set({\n      items: state,\n      purchaseDate: purchaseDate,\n      consumer: consumer\n    });\n  };\n\n  const contextValues = {\n    removeProduct,\n    addProduct,\n    increase,\n    decrease,\n    clearCart,\n    handleCheckout,\n    ...state\n  };\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: contextValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default CartContextProvider;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/contexts/CartContext.jsx"],"names":["React","createContext","useReducer","CartReducer","sumItems","firebase","auth","CartContext","storage","localStorage","getItem","JSON","parse","initialState","cartItems","checkout","CartContextProvider","children","state","dispatch","increase","payload","type","decrease","addProduct","removeProduct","clearCart","handleCheckout","console","log","consumer","currentUser","uid","purchaseDate","firestore","Timestamp","fromDate","Date","toDate","collection","doc","toString","set","items","contextValues"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { CartReducer, sumItems } from \"./CartReducer\";\nimport firebase, { auth } from \"../services/firebase\";\n\nexport const CartContext = createContext();\n\nconst storage = localStorage.getItem(\"cart\")\n  ? JSON.parse(localStorage.getItem(\"cart\"))\n  : [];\nconst initialState = {\n  cartItems: storage,\n  ...sumItems(storage),\n  checkout: false,\n};\n\nconst CartContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  const increase = (payload) => {\n    dispatch({ type: \"INCREASE\", payload });\n  };\n\n  const decrease = (payload) => {\n    dispatch({ type: \"DECREASE\", payload });\n  };\n\n  const addProduct = (payload) => {\n    dispatch({ type: \"ADD_ITEM\", payload });\n  };\n\n  const removeProduct = (payload) => {\n    dispatch({ type: \"REMOVE_ITEM\", payload });\n  };\n\n  const clearCart = () => {\n    dispatch({ type: \"CLEAR\" });\n  };\n\n  const handleCheckout = () => {\n    console.log(\"CHECKOUT\", state);\n    dispatch({ type: \"CHECKOUT\" });\n    const consumer = \"\";\n    if (auth.currentUser) {\n      consumer = auth.currentUser.uid;\n    }\n    const purchaseDate = firebase.firestore.Timestamp.fromDate(\n      new Date()\n    ).toDate();\n    firebase\n      .firestore()\n      .collection(\"consumption\")\n      .doc(purchaseDate.toString())\n      .set({\n        items: state,\n        purchaseDate: purchaseDate,\n        consumer: consumer,\n      });\n  };\n\n  const contextValues = {\n    removeProduct,\n    addProduct,\n    increase,\n    decrease,\n    clearCart,\n    handleCheckout,\n    ...state,\n  };\n\n  return (\n    <CartContext.Provider value={contextValues}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}