{"ast":null,"code":"/**\r\n * Created by ying.wu on 2017/6/21.\r\n */\nconst helper = require('./helper.js');\n\nconst verify = require('./verification.js');\n\nconst ECpayError = require('./error.js');\n\nconst iconv = require('iconv-lite');\n\nconst crypto = require('crypto');\n\nconst url = require('url');\n\nconst querystring = require('querystring');\n\nconst http = require('http');\n\nconst https = require('https');\n\nclass ECpayExecRefundAndGrant {\n  constructor() {\n    this.helper = new helper(); // this.verify_act_api = new verify.ActParamVerify();\n  }\n\n  credit_do_act(parameters) {\n    this._act_base_proc(parameters);\n\n    let res = this._act_pos_proc(parameters, 'DoAction');\n\n    return res;\n  }\n\n  aio_capture(parameters) {\n    this._act_base_proc(parameters);\n\n    let res = this._act_pos_proc(parameters, 'Capture');\n\n    return res;\n  }\n\n  _act_base_proc(params) {\n    if (params.constructor === Object) {\n      // Process PlatformID & MerchantID by contractor setting\n      if (this.helper.is_contractor()) {\n        params['PlatformID'] = this.helper.get_mercid();\n\n        if (params['MerchantID'] === null) {\n          throw new Error(`[MerchantID] should be specified when you're contractor-Platform.`);\n        }\n      } else {\n        params['PlatformID'] = '';\n        params['MerchantID'] = this.helper.get_mercid();\n      }\n    } else {\n      throw new ECpayError.ECpayInvalidParam(`Received parameter object must be a Object.`);\n    }\n  }\n\n  _act_pos_proc(params, apiname) {\n    let verify_act_api = new verify.ActParamVerify(apiname);\n    verify_act_api.verify_act_param(params); // encode special param\n    // Insert chkmacval\n    // console.log(params);\n\n    let chkmac = this.helper.gen_chk_mac_value(params);\n    params['CheckMacValue'] = chkmac; // gen post html\n\n    let api_url = verify_act_api.get_svc_url(apiname, this.helper.get_op_mode()); //post from server\n\n    let resp = this.helper.http_request('POST', api_url, params); // return post response\n\n    return new Promise((resolve, reject) => {\n      resp.then(function (result) {\n        return resolve(iconv.decode(Buffer.concat(result), 'utf-8'));\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nmodule.exports = ECpayExecRefundAndGrant;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 4/src/ecpay_payment_nodejs/lib/ecpay_payment/exec_grant_refund.js"],"names":["helper","require","verify","ECpayError","iconv","crypto","url","querystring","http","https","ECpayExecRefundAndGrant","constructor","credit_do_act","parameters","_act_base_proc","res","_act_pos_proc","aio_capture","params","Object","is_contractor","get_mercid","Error","ECpayInvalidParam","apiname","verify_act_api","ActParamVerify","verify_act_param","chkmac","gen_chk_mac_value","api_url","get_svc_url","get_op_mode","resp","http_request","Promise","resolve","reject","then","result","decode","Buffer","concat","catch","err","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Created by ying.wu on 2017/6/21.\r\n */\r\nconst helper = require('./helper.js');\r\nconst verify = require('./verification.js');\r\nconst ECpayError = require('./error.js');\r\nconst iconv = require('iconv-lite');\r\nconst crypto = require('crypto');\r\nconst url = require('url');\r\nconst querystring = require('querystring');\r\nconst http = require('http');\r\nconst https = require('https');\r\n\r\nclass ECpayExecRefundAndGrant{\r\n    constructor(){\r\n        this.helper = new helper();\r\n        // this.verify_act_api = new verify.ActParamVerify();\r\n    }\r\n\r\n    credit_do_act(parameters){\r\n        this._act_base_proc(parameters);\r\n        let res = this._act_pos_proc(parameters, 'DoAction');\r\n        return res;\r\n    }\r\n\r\n    aio_capture(parameters){\r\n        this._act_base_proc(parameters);\r\n        let res = this._act_pos_proc(parameters , 'Capture');\r\n        return res;\r\n    }\r\n\r\n    _act_base_proc(params){\r\n        if (params.constructor === Object){\r\n            // Process PlatformID & MerchantID by contractor setting\r\n            if (this.helper.is_contractor()){\r\n                params['PlatformID'] = this.helper.get_mercid();\r\n                if (params['MerchantID'] === null){\r\n                    throw new Error(`[MerchantID] should be specified when you're contractor-Platform.`);\r\n                }\r\n            } else {\r\n                params['PlatformID'] = '';\r\n                params['MerchantID'] = this.helper.get_mercid();\r\n            }\r\n        } else {\r\n            throw new ECpayError.ECpayInvalidParam(`Received parameter object must be a Object.`);\r\n        }\r\n    }\r\n\r\n    _act_pos_proc(params, apiname){\r\n        let verify_act_api = new verify.ActParamVerify(apiname);\r\n        verify_act_api.verify_act_param(params);\r\n        // encode special param\r\n\r\n        // Insert chkmacval\r\n        // console.log(params);\r\n        let chkmac = this.helper.gen_chk_mac_value(params);\r\n        params['CheckMacValue'] = chkmac;\r\n        // gen post html\r\n        let api_url = verify_act_api.get_svc_url(apiname, this.helper.get_op_mode());\r\n        //post from server\r\n        let resp = this.helper.http_request('POST', api_url, params);\r\n        // return post response\r\n        return new Promise((resolve, reject) => {\r\n            resp.then(function (result) {\r\n                return resolve(iconv.decode(Buffer.concat(result), 'utf-8'));\r\n            }).catch(function (err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\nmodule.exports = ECpayExecRefundAndGrant;"]},"metadata":{},"sourceType":"module"}