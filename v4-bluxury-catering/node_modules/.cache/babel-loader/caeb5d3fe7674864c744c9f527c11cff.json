{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx\";\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\")\n  });\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    acceptTerms: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\u6703\\u54E1\\u8A3B\\u518A\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: fields => {\n      alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"\\u540D\\u7A31\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    className: \"form-control\" + (errors.firstName && touched.firstName ? \" is-invalid\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"firstName\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"\\u4FE1\\u7BB1\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"email\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"\\u5BC6\\u78BC\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"\\u78BA\\u8A8D\\u5BC6\\u78BC\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    className: \"form-control\" + (errors.confirmPassword && touched.confirmPassword ? \" is-invalid\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"confirmPassword\",\n    component: \"div\",\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"\\u78BA\\u8A8D\\u9001\\u51FA\")))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/components/RegisterForm.jsx"],"names":["React","useState","logo","Formik","Form","Field","ErrorMessage","Yup","RegisterForm","email","setEmail","password","swtPassword","username","setUsername","validationSchema","object","shape","title","string","required","firstName","lastName","min","confirmPassword","oneOf","ref","acceptTerms","bool","initialValues","fields","alert","JSON","stringify","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport logo from \"../assets/logo.png\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst RegisterForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, swtPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Ts & Cs is required\"),\n  });\n\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    acceptTerms: false,\n  };\n\n  return (\n    <div id=\"form\">\n      <h1 id=\"formTitle\">會員註冊</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(fields) => {\n          alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"firstName\">名稱</label>\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"firstName\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n\n            <div className=\"form-group text-left\">\n              <label htmlFor=\"email\">信箱</label>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-row text-left\">\n              <div className=\"form-group col\">\n                <label htmlFor=\"password\">密碼</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col\">\n                <label htmlFor=\"confirmPassword\">確認密碼</label>\n                <Field\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.confirmPassword && touched.confirmPassword\n                      ? \" is-invalid\"\n                      : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"confirmPassword\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group mt-2\">\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                確認送出\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}