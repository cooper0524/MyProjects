{"ast":null,"code":"var _jsxFileName = \"/Users/Cooper/Bluxury_Catering/bluxury-catering/src/pages.js\";\nimport React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { Breadcrumb } from './components';\nimport { rootPath } from './routes';\n/**\n * These are root pages\n */\n\nconst Home = ({\n  location\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n    locationPath: location.pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Books = ({\n  location\n}) => {\n  const onMatchedRoutes = matchedRoutes => {\n    const _matchedRoutes = matchedRoutes.map(matchedRoute => {\n      if (matchedRoute.match && matchedRoute.match.path === '/books/:id') {\n        const bookId = matchedRoute.match.params && matchedRoute.match.params.id; // You can find book name by bookId here...\n\n        return {\n          match: matchedRoute.match,\n          route: { ...matchedRoute.route,\n            path: matchedRoute.match.url,\n            breadcrumbName: bookId\n          }\n        };\n      } else {\n        return matchedRoute;\n      }\n    });\n\n    return [{\n      route: {\n        path: `${rootPath}/`,\n        breadcrumbName: 'Home'\n      }\n    }, ..._matchedRoutes];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Books\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n    locationPath: location.pathname,\n    onMatchedRoutes: onMatchedRoutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Electronics = ({\n  route,\n  location\n}) => {\n  const onMatchedRoutes = matchedRoutes => {\n    return [{\n      route: {\n        path: `${rootPath}/`,\n        breadcrumbName: 'Home'\n      }\n    }, ...matchedRoutes];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Electronics\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n    locationPath: location.pathname,\n    onMatchedRoutes: onMatchedRoutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), renderRoutes(route.routes));\n};\n/**\n * These are pages nested in Electronics\n */\n\n\nconst Mobile = () => {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }, \"Mobile Phone\");\n};\n\nconst Desktop = () => {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, \"Desktop PC\");\n};\n\nconst Laptop = () => {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  }, \"Laptop\");\n};\n\nexport { Home, Books, Electronics, Mobile, Desktop, Laptop };","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering/src/pages.js"],"names":["React","renderRoutes","Breadcrumb","rootPath","Home","location","pathname","Books","onMatchedRoutes","matchedRoutes","_matchedRoutes","map","matchedRoute","match","path","bookId","params","id","route","url","breadcrumbName","Electronics","routes","Mobile","Desktop","Laptop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { Breadcrumb } from './components';\nimport { rootPath } from './routes';\n\n/**\n * These are root pages\n */\nconst Home = ({ location }) => {\n  return (\n    <div>\n      <h1 className=\"py-3\">Home</h1>\n      <Breadcrumb locationPath={location.pathname} />\n    </div>\n  );\n};\n\nconst Books = ({ location }) => {\n  const onMatchedRoutes = (matchedRoutes) => {\n    const _matchedRoutes = matchedRoutes.map((matchedRoute) => {\n      if (matchedRoute.match && matchedRoute.match.path === '/books/:id') {\n        const bookId =\n          matchedRoute.match.params && matchedRoute.match.params.id;\n        // You can find book name by bookId here...\n        return {\n          match: matchedRoute.match,\n          route: {\n            ...matchedRoute.route,\n            path: matchedRoute.match.url,\n            breadcrumbName: bookId,\n          },\n        };\n      } else {\n        return matchedRoute;\n      }\n    });\n\n    return [\n      {\n        route: {\n          path: `${rootPath}/`,\n          breadcrumbName: 'Home',\n        },\n      },\n      ..._matchedRoutes,\n    ];\n  };\n\n  return (\n    <div>\n      <h1 className=\"py-3\">Books</h1>\n      <Breadcrumb\n        locationPath={location.pathname}\n        onMatchedRoutes={onMatchedRoutes}\n      />\n    </div>\n  );\n};\n\nconst Electronics = ({ route, location }) => {\n  const onMatchedRoutes = (matchedRoutes) => {\n    return [\n      {\n        route: {\n          path: `${rootPath}/`,\n          breadcrumbName: 'Home',\n        },\n      },\n      ...matchedRoutes,\n    ];\n  };\n\n  return (\n    <div>\n      <h1 className=\"py-3\">Electronics</h1>\n\n      <Breadcrumb\n        locationPath={location.pathname}\n        onMatchedRoutes={onMatchedRoutes}\n      />\n\n      {renderRoutes(route.routes)}\n    </div>\n  );\n};\n\n/**\n * These are pages nested in Electronics\n */\nconst Mobile = () => {\n  return <h3>Mobile Phone</h3>;\n};\n\nconst Desktop = () => {\n  return <h3>Desktop PC</h3>;\n};\n\nconst Laptop = () => {\n  return <h3>Laptop</h3>;\n};\n\nexport { Home, Books, Electronics, Mobile, Desktop, Laptop };\n"]},"metadata":{},"sourceType":"module"}