{"ast":null,"code":"/**\r\n * Created by ying.wu on 2017/6/12.\r\n */\nconst fs = require('fs');\n\nconst et = require('elementtree');\n\nconst crypto = require('crypto');\n\nconst url = require('url');\n\nconst querystring = require('querystring');\n\nconst http = require('http');\n\nconst https = require('https'); // const EventEmitter = require('events').EventEmitter;\n\n\nclass APIHelper {\n  constructor() {\n    this.cont = fs.readFileSync(__dirname + '/../../conf/payment_conf.xml').toString();\n    this.cont_xml = et.parse(this.cont);\n    this.active_merc_info = this.cont_xml.findtext('./MercProfile');\n    this.op_mode = this.cont_xml.findtext('./OperatingMode');\n    this.contractor_stat = this.cont_xml.findtext('./IsProjectContractor');\n    this.merc_info = this.cont_xml.findall(`./MerchantInfo/MInfo/[@name=\"${this.active_merc_info}\"]`);\n    this.ignore_payment = [];\n    this.ignore_info = this.cont_xml.findall('./IgnorePayment//Method');\n\n    for (let t = 0, l = this.ignore_info.length; t < l; t++) {\n      this.ignore_payment.push(this.ignore_info[t].text);\n    }\n\n    if (this.merc_info !== []) {\n      this.merc_id = this.merc_info[0].findtext('./MerchantID');\n      this.hkey = this.merc_info[0].findtext('./HashKey');\n      this.hiv = this.merc_info[0].findtext('./HashIV');\n    } else {\n      throw new Error(`Specified merchant setting name (${this.active_merc_info}) not found.`);\n    }\n\n    this.date = new Date();\n  }\n\n  get_mercid() {\n    return this.merc_id;\n  }\n\n  get_op_mode() {\n    return this.op_mode;\n  }\n\n  get_ignore_pay() {\n    return this.ignore_payment;\n  }\n\n  get_curr_unixtime() {\n    return this.date.getTime().toString().slice(0, 10);\n  }\n\n  is_contractor() {\n    if (this.contractor_stat === 'N') {\n      return false;\n    } else if (this.contractor_stat === 'Y') {\n      return true;\n    } else {\n      throw new Error(\"Unknown [IsProjectContractor] configuration.\");\n    }\n  }\n\n  urlencode_dot_net(raw_data, case_tr = 'DOWN') {\n    if (typeof raw_data === 'string') {\n      let encode_data = encodeURIComponent(raw_data);\n\n      switch (case_tr) {\n        case 'KEEP':\n          // Do nothing\n          break;\n\n        case 'UP':\n          encode_data = encode_data.toUpperCase();\n          break;\n\n        case 'DOWN':\n          encode_data = encode_data.toLowerCase();\n          break;\n      }\n\n      encode_data = encode_data.replace(/\\'/g, \"%27\");\n      encode_data = encode_data.replace(/\\~/g, \"%7e\");\n      encode_data = encode_data.replace(/\\%20/g, \"+\");\n      return encode_data;\n    } else {\n      throw new Error(\"Data received is not a string.\");\n    }\n  }\n\n  encode_special_param(params, target_arr) {\n    let urlencode_dotnet = this.urlencode_dot_net;\n\n    if (params.constructor === Object) {\n      target_arr.forEach(function (n) {\n        if (Object.keys(params).includes(n)) {\n          params[n] = urlencode_dotnet(params[n]);\n        }\n      });\n    }\n  }\n\n  gen_chk_mac_value(params, mode = 1) {\n    if (params.constructor === Object) {\n      // throw exception if param contains CheckMacValue, HashKey, HashIV\n      let sec = ['CheckMacValue', 'HashKey', 'HashIV'];\n      sec.forEach(function (pa) {\n        if (Object.keys(params).includes(pa)) {\n          throw new Error(`Parameters shouldn't contain ${pa}`);\n        }\n      });\n      let od = {};\n      let temp_arr = Object.keys(params).sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      }); // console.log(temp_arr);\n\n      let raw = temp_arr.forEach(function (key) {\n        od[key] = params[key];\n      });\n      raw = JSON.stringify(od).toLowerCase().replace(/\":\"/g, '=');\n      raw = raw.replace(/\",\"|{\"|\"}/g, '&');\n      raw = this.urlencode_dot_net(`HashKey=${this.hkey}${raw}HashIV=${this.hiv}`);\n      console.log(raw);\n      let chksum = \"\";\n\n      switch (mode) {\n        case 0:\n          chksum = crypto.createHash('md5').update(raw).digest('hex');\n          break;\n\n        case 1:\n          chksum = crypto.createHash('sha256').update(raw).digest('hex');\n          break;\n\n        default:\n          throw new Error(\"Unexpected hash mode.\");\n      }\n\n      return chksum.toUpperCase();\n    } else {\n      throw new Error(\"Data received is not a Object.\");\n    }\n  }\n\n  gen_aes_encrypt(params) {\n    if (params.constructor === Object) {\n      // throw exception if param contains HashKey, HashIV\n      let sec = ['HashKey', 'HashIV'];\n      sec.forEach(function (pa) {\n        if (Object.keys(params).includes(pa)) {\n          throw new Error(`Parameters shouldn't contain ${pa}`);\n        }\n      });\n      let encipher = crypto.createCipheriv('aes-128-cbc', this.hkey, this.hiv);\n      let text = params['PaymentToken'];\n      let encrypted_base64 = Buffer.concat([encipher.update(text), encipher.final()]).toString('base64');\n      return this.urlencode_dot_net(encrypted_base64);\n    } else {\n      throw new Error(`Data received is not a Object.`);\n    }\n  }\n\n  http_request(method, api_url, payload) {\n    if (method !== \"GET\" && method !== \"POST\") {\n      throw new Error(\"Only GET & POST method are available.\");\n    }\n\n    var target_url = url.parse(api_url);\n    var postData = querystring.stringify(payload);\n    var http_op;\n\n    if (target_url.protocol === 'https:') {\n      http_op = https;\n    } else if (target_url.protocol === 'http:') {\n      http_op = http;\n    } else {\n      throw new Error(\"Only http & https protocol are available.\");\n    }\n\n    var options = {\n      protocol: target_url['protocol'],\n      hostname: target_url['hostname'],\n      path: target_url['path'],\n      method: method,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': Buffer.byteLength(postData)\n      }\n    };\n    return new Promise((resolve, reject) => {\n      const req = http_op.request(options, res => {\n        console.log(`STATUS: ${res.statusCode}`); // console.log(`HEADERS: ${JSON.stringify(res.headers)}`);\n        // res.setEncoding('utf8');\n\n        const body = [];\n        res.on('data', chunk => {\n          // console.log(`BODY: ${chunk}`);\n          body.push(chunk);\n        });\n        res.on('end', () => {\n          // console.log('response data.');\n          // console.log(body);\n          resolve(body);\n        });\n      });\n      req.on('error', e => {\n        console.error(`problem with request: ${e.message}`);\n        reject(e);\n      });\n      req.write(postData);\n      req.end();\n    });\n  }\n\n  gen_html_post_form(act, id, parameters, input_typ = 'hidden', submit = true) {\n    var html = \"<form id=\\\"\" + id + \"\\\" action=\\\"\" + act + \"\\\" method=\\\"post\\\">\";\n    Object.keys(parameters).forEach(function (key) {\n      html += \"<input type=\\\"\" + input_typ + \"\\\" name=\\\"\" + key + \"\\\" id=\\\"\" + key + \"\\\" value=\\\"\" + parameters[key] + \"\\\" />\";\n    });\n\n    if (submit === true) {\n      html += `<script type=\"text/javascript\">document.getElementById(\"${id}\").submit();</script>`;\n    }\n\n    html += \"</form>\"; // console.log(typeof html);\n\n    return html;\n  }\n\n  valid_chkmc_string(str) {\n    let rtn_obj = {};\n    let rtn_arr = str.split('&');\n    rtn_arr.forEach(function (e) {\n      let param = e.split('=');\n      rtn_obj[param[0]] = param[1];\n    });\n    let chkmac = rtn_obj['CheckMacValue'];\n    delete rtn_obj['CheckMacValue'];\n    let val = '';\n\n    if (chkmac.length === 64) {\n      val = this.gen_chk_mac_value(rtn_obj);\n    } else if (chkmac.length === 32) {\n      val = this.gen_chk_mac_value(rtn_obj, 0);\n    }\n\n    if (chkmac === val) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nmodule.exports = APIHelper;","map":{"version":3,"sources":["/Users/Cooper/Bluxury_Catering/bluxury-catering copy 4/src/ecpay_payment_nodejs/lib/ecpay_payment/helper.js"],"names":["fs","require","et","crypto","url","querystring","http","https","APIHelper","constructor","cont","readFileSync","__dirname","toString","cont_xml","parse","active_merc_info","findtext","op_mode","contractor_stat","merc_info","findall","ignore_payment","ignore_info","t","l","length","push","text","merc_id","hkey","hiv","Error","date","Date","get_mercid","get_op_mode","get_ignore_pay","get_curr_unixtime","getTime","slice","is_contractor","urlencode_dot_net","raw_data","case_tr","encode_data","encodeURIComponent","toUpperCase","toLowerCase","replace","encode_special_param","params","target_arr","urlencode_dotnet","Object","forEach","n","keys","includes","gen_chk_mac_value","mode","sec","pa","od","temp_arr","sort","a","b","localeCompare","raw","key","JSON","stringify","console","log","chksum","createHash","update","digest","gen_aes_encrypt","encipher","createCipheriv","encrypted_base64","Buffer","concat","final","http_request","method","api_url","payload","target_url","postData","http_op","protocol","options","hostname","path","headers","byteLength","Promise","resolve","reject","req","request","res","statusCode","body","on","chunk","e","error","message","write","end","gen_html_post_form","act","id","parameters","input_typ","submit","html","valid_chkmc_string","str","rtn_obj","rtn_arr","split","param","chkmac","val","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Created by ying.wu on 2017/6/12.\r\n */\r\nconst fs = require('fs');\r\nconst et = require('elementtree');\r\nconst crypto = require('crypto');\r\nconst url = require('url');\r\nconst querystring = require('querystring');\r\nconst http = require('http');\r\nconst https = require('https');\r\n\r\n// const EventEmitter = require('events').EventEmitter;\r\n\r\nclass APIHelper {\r\n    constructor(){\r\n        this.cont = fs.readFileSync(__dirname + '/../../conf/payment_conf.xml').toString();\r\n        this.cont_xml = et.parse(this.cont);\r\n        this.active_merc_info = this.cont_xml.findtext('./MercProfile');\r\n        this.op_mode = this.cont_xml.findtext('./OperatingMode');\r\n        this.contractor_stat = this.cont_xml.findtext('./IsProjectContractor');\r\n        this.merc_info = this.cont_xml.findall(`./MerchantInfo/MInfo/[@name=\"${this.active_merc_info}\"]`);\r\n        this.ignore_payment = [];\r\n        this.ignore_info = this.cont_xml.findall('./IgnorePayment//Method');\r\n        for(let t = 0, l = this.ignore_info.length; t < l; t++) {\r\n            this.ignore_payment.push(this.ignore_info[t].text);\r\n        }\r\n        if (this.merc_info !== []) {\r\n            this.merc_id = this.merc_info[0].findtext('./MerchantID');\r\n            this.hkey = this.merc_info[0].findtext('./HashKey');\r\n            this.hiv = this.merc_info[0].findtext('./HashIV');\r\n        } else {\r\n            throw new Error(`Specified merchant setting name (${this.active_merc_info}) not found.`);\r\n        }\r\n        this.date = new Date();\r\n    }\r\n    get_mercid(){\r\n        return this.merc_id;\r\n    }\r\n    get_op_mode(){\r\n        return this.op_mode;\r\n    }\r\n    get_ignore_pay(){\r\n        return this.ignore_payment;\r\n    }\r\n    get_curr_unixtime(){\r\n        return this.date.getTime().toString().slice(0, 10);\r\n    }\r\n    is_contractor(){\r\n        if (this.contractor_stat === 'N') {\r\n            return false\r\n        } else if (this.contractor_stat === 'Y') {\r\n            return true\r\n        } else {\r\n            throw new Error(\"Unknown [IsProjectContractor] configuration.\");\r\n        }\r\n    }\r\n    urlencode_dot_net(raw_data, case_tr='DOWN'){\r\n        if (typeof raw_data === 'string') {\r\n            let encode_data = encodeURIComponent(raw_data);\r\n            switch (case_tr) {\r\n                case 'KEEP':\r\n                    // Do nothing\r\n                    break;\r\n                case 'UP':\r\n                    encode_data = encode_data.toUpperCase();\r\n                    break;\r\n                case 'DOWN':\r\n                    encode_data = encode_data.toLowerCase();\r\n                    break;\r\n            }\r\n            encode_data = encode_data.replace(/\\'/g,\"%27\");\r\n            encode_data = encode_data.replace(/\\~/g,\"%7e\");\r\n            encode_data = encode_data.replace(/\\%20/g,\"+\");\r\n            return encode_data\r\n        } else {\r\n            throw new Error(\"Data received is not a string.\");\r\n        }\r\n    }\r\n    encode_special_param(params, target_arr){\r\n        let urlencode_dotnet = this.urlencode_dot_net;\r\n        if (params.constructor === Object) {\r\n            target_arr.forEach(function (n) {\r\n                if (Object.keys(params).includes(n)) {\r\n                    params[n] = urlencode_dotnet(params[n]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    gen_chk_mac_value(params, mode=1){\r\n       if (params.constructor === Object) {\r\n           // throw exception if param contains CheckMacValue, HashKey, HashIV\r\n           let sec = ['CheckMacValue', 'HashKey', 'HashIV'];\r\n           sec.forEach(function (pa) {\r\n               if (Object.keys(params).includes(pa)) {\r\n                   throw new Error(`Parameters shouldn't contain ${pa}`);\r\n               }\r\n           });\r\n\r\n           let od = {};\r\n           let temp_arr = (Object.keys(params).sort(function (a, b) {\r\n               return a.toLowerCase().localeCompare(b.toLowerCase());\r\n           }));\r\n           // console.log(temp_arr);\r\n           let raw = temp_arr.forEach(function (key) {od[key] = params[key];});\r\n           raw = JSON.stringify(od).toLowerCase().replace(/\":\"/g, '=');\r\n           raw = raw.replace(/\",\"|{\"|\"}/g, '&');\r\n           raw = this.urlencode_dot_net(`HashKey=${this.hkey}${raw}HashIV=${this.hiv}`);\r\n           console.log(raw);\r\n\r\n           let chksum = \"\";\r\n           switch (mode){\r\n               case 0:\r\n                   chksum = crypto.createHash('md5').update(raw).digest('hex');\r\n                   break;\r\n               case 1:\r\n                   chksum = crypto.createHash('sha256').update(raw).digest('hex');\r\n                   break;\r\n               default:\r\n                   throw new Error(\"Unexpected hash mode.\");\r\n           }\r\n\r\n           return chksum.toUpperCase();\r\n\r\n       } else {\r\n           throw new Error(\"Data received is not a Object.\");\r\n       }\r\n    }\r\n    gen_aes_encrypt(params){\r\n        if (params.constructor === Object){\r\n            // throw exception if param contains HashKey, HashIV\r\n            let sec = ['HashKey', 'HashIV'];\r\n            sec.forEach(function (pa) {\r\n                if (Object.keys(params).includes(pa)) {\r\n                    throw new Error(`Parameters shouldn't contain ${pa}`);\r\n                }\r\n            });\r\n            let encipher = crypto.createCipheriv('aes-128-cbc', this.hkey, this.hiv);\r\n            let text = params['PaymentToken'];\r\n            let encrypted_base64 = Buffer.concat([encipher.update(text), encipher.final()]).toString('base64');\r\n            return this.urlencode_dot_net(encrypted_base64);\r\n        } else {\r\n            throw new Error(`Data received is not a Object.`);\r\n        }\r\n    }\r\n    http_request(method, api_url, payload){\r\n        if (method !== \"GET\" && method !== \"POST\") {\r\n            throw new Error(\"Only GET & POST method are available.\");\r\n        }\r\n\r\n        var target_url = url.parse(api_url);\r\n        var postData = querystring.stringify(payload);\r\n        var http_op;\r\n\r\n        if (target_url.protocol === 'https:'){\r\n            http_op = https;\r\n        } else if (target_url.protocol === 'http:'){\r\n            http_op = http;\r\n        } else {\r\n            throw new Error(\"Only http & https protocol are available.\");\r\n        }\r\n\r\n        var options = {\r\n            protocol: target_url['protocol'],\r\n            hostname: target_url['hostname'],\r\n            path: target_url['path'],\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Content-Length': Buffer.byteLength(postData),\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const req = http_op.request(options, (res) => {\r\n                console.log(`STATUS: ${res.statusCode}`);\r\n                // console.log(`HEADERS: ${JSON.stringify(res.headers)}`);\r\n                // res.setEncoding('utf8');\r\n                const body = [];\r\n                res.on('data', (chunk) => {\r\n                    // console.log(`BODY: ${chunk}`);\r\n                    body.push(chunk);\r\n                });\r\n                res.on('end', () => {\r\n                    // console.log('response data.');\r\n                    // console.log(body);\r\n                    resolve(body);\r\n                });\r\n            });\r\n            req.on('error', (e) => {\r\n                console.error(`problem with request: ${e.message}`);\r\n                reject(e)\r\n            });\r\n\r\n            req.write(postData);\r\n            req.end();\r\n        });\r\n    };\r\n    gen_html_post_form(act, id, parameters, input_typ='hidden', submit=true){\r\n        var html = \"<form id=\\\"\"+ id +\"\\\" action=\\\"\"+ act + \"\\\" method=\\\"post\\\">\";\r\n        Object.keys(parameters).forEach(function (key) {\r\n            html += \"<input type=\\\"\"+ input_typ +\"\\\" name=\\\"\" + key + \"\\\" id=\\\"\" + key + \"\\\" value=\\\"\" + parameters[key] + \"\\\" />\";\r\n        });\r\n        if (submit === true){\r\n            html += `<script type=\"text/javascript\">document.getElementById(\"${id}\").submit();</script>`;\r\n        }\r\n        html += \"</form>\";\r\n        // console.log(typeof html);\r\n        return html\r\n    }\r\n    valid_chkmc_string(str){\r\n       let rtn_obj = {};\r\n       let rtn_arr = str.split('&');\r\n       rtn_arr.forEach(function (e) {\r\n          let param = e.split('=');\r\n          rtn_obj[param[0]] = param[1];\r\n       });\r\n       let chkmac = rtn_obj['CheckMacValue'];\r\n       delete rtn_obj['CheckMacValue'];\r\n       let val = '';\r\n       if (chkmac.length === 64){\r\n           val = this.gen_chk_mac_value(rtn_obj);\r\n       } else if (chkmac.length === 32) {\r\n           val = this.gen_chk_mac_value(rtn_obj, 0);\r\n       }\r\n       if (chkmac === val){\r\n           return true\r\n       } else {\r\n           return false\r\n       }\r\n\r\n    }\r\n\r\n}\r\nmodule.exports = APIHelper;"]},"metadata":{},"sourceType":"module"}